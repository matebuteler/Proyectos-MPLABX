

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 07 11:34:16 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 07/09/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F1519 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     008C                     	;# 
    80     008D                     	;# 
    81     008E                     	;# 
    82     008F                     	;# 
    83     0090                     	;# 
    84     0091                     	;# 
    85     0092                     	;# 
    86     0095                     	;# 
    87     0096                     	;# 
    88     0097                     	;# 
    89     0099                     	;# 
    90     009A                     	;# 
    91     009B                     	;# 
    92     009B                     	;# 
    93     009C                     	;# 
    94     009D                     	;# 
    95     009E                     	;# 
    96     010C                     	;# 
    97     010D                     	;# 
    98     010E                     	;# 
    99     010F                     	;# 
   100     0110                     	;# 
   101     0116                     	;# 
   102     0117                     	;# 
   103     011D                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     018E                     	;# 
   107     018F                     	;# 
   108     0190                     	;# 
   109     0191                     	;# 
   110     0191                     	;# 
   111     0192                     	;# 
   112     0193                     	;# 
   113     0193                     	;# 
   114     0194                     	;# 
   115     0195                     	;# 
   116     0196                     	;# 
   117     0197                     	;# 
   118     0199                     	;# 
   119     019A                     	;# 
   120     019B                     	;# 
   121     019B                     	;# 
   122     019B                     	;# 
   123     019B                     	;# 
   124     019C                     	;# 
   125     019C                     	;# 
   126     019D                     	;# 
   127     019E                     	;# 
   128     019F                     	;# 
   129     020D                     	;# 
   130     0210                     	;# 
   131     0211                     	;# 
   132     0211                     	;# 
   133     0212                     	;# 
   134     0212                     	;# 
   135     0213                     	;# 
   136     0213                     	;# 
   137     0214                     	;# 
   138     0214                     	;# 
   139     0215                     	;# 
   140     0215                     	;# 
   141     0215                     	;# 
   142     0216                     	;# 
   143     0216                     	;# 
   144     0217                     	;# 
   145     0217                     	;# 
   146     0291                     	;# 
   147     0291                     	;# 
   148     0292                     	;# 
   149     0293                     	;# 
   150     0298                     	;# 
   151     0298                     	;# 
   152     0299                     	;# 
   153     029A                     	;# 
   154     0394                     	;# 
   155     0395                     	;# 
   156     0396                     	;# 
   157     0FE4                     	;# 
   158     0FE5                     	;# 
   159     0FE6                     	;# 
   160     0FE7                     	;# 
   161     0FE8                     	;# 
   162     0FE9                     	;# 
   163     0FEA                     	;# 
   164     0FEB                     	;# 
   165     0FED                     	;# 
   166     0FEE                     	;# 
   167     0FEF                     	;# 
   168                           
   169                           	psect	nvBANK0
   170     0024                     __pnvBANK0:
   171     0024                     _i:
   172     0024                     	ds	2
   173     000F                     _PORTD	set	15
   174     0068                     _RB0	set	104
   175     0080                     _RE0	set	128
   176     0081                     _RE1	set	129
   177     007E                     _RD6	set	126
   178     007D                     _RD5	set	125
   179     007C                     _RD4	set	124
   180     007B                     _RD3	set	123
   181     007A                     _RD2	set	122
   182     0079                     _RD1	set	121
   183     0078                     _RD0	set	120
   184     0090                     _TRISE	set	144
   185     008D                     _TRISB	set	141
   186     008F                     _TRISD	set	143
   187     0099                     _OSCCON	set	153
   188     0190                     _ANSELE	set	400
   189     018D                     _ANSELB	set	397
   190     018F                     _ANSELD	set	399
   191                           
   192                           	psect	cinit
   193     07FA                     start_initialization:	
   194                           ; #config settings
   195                           
   196     07FA                     __initialization:
   197                           
   198                           ; Clear objects allocated to BANK0
   199     07FA  0020               	movlb	0	; select bank0
   200     07FB  01A6               	clrf	__pbssBANK0& (0+127)
   201     07FC  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   202     07FD                     end_of_initialization:	
   203                           ;End of C runtime variable initialization code
   204                           
   205     07FD                     __end_of__initialization:
   206     07FD  0020               	movlb	0
   207     07FE  3186  2E2C         	ljmp	_main	;jump to C main() function
   208                           
   209                           	psect	bssBANK0
   210     0026                     __pbssBANK0:
   211     0026                     _BT_ant:
   212     0026                     	ds	2
   213                           
   214                           	psect	cstackCOMMON
   215     0070                     __pcstackCOMMON:
   216     0070                     ?_disp7seg:
   217     0070                     ?_main:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0070                     ?___awdiv:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0070                     ?___awmod:	
   224                           ; 2 bytes @ 0x0
   225                           
   226     0070                     disp7seg@n:	
   227                           ; 2 bytes @ 0x0
   228                           
   229     0070                     ___awdiv@divisor:	
   230                           ; 2 bytes @ 0x0
   231                           
   232     0070                     ___awmod@divisor:	
   233                           ; 2 bytes @ 0x0
   234                           
   235                           
   236                           ; 2 bytes @ 0x0
   237     0070                     	ds	2
   238     0072                     ??_disp7seg:
   239     0072                     _disp7seg$50:	
   240                           ; 1 bytes @ 0x2
   241                           
   242     0072                     ___awdiv@dividend:	
   243                           ; 1 bytes @ 0x2
   244                           
   245     0072                     ___awmod@dividend:	
   246                           ; 2 bytes @ 0x2
   247                           
   248                           
   249                           ; 2 bytes @ 0x2
   250     0072                     	ds	1
   251     0073                     _disp7seg$51:
   252                           
   253                           ; 1 bytes @ 0x3
   254     0073                     	ds	1
   255     0074                     ??___awdiv:
   256     0074                     ??___awmod:	
   257                           ; 1 bytes @ 0x4
   258                           
   259     0074                     _disp7seg$52:	
   260                           ; 1 bytes @ 0x4
   261                           
   262                           
   263                           ; 1 bytes @ 0x4
   264     0074                     	ds	1
   265     0075                     _disp7seg$53:
   266     0075                     ___awdiv@counter:	
   267                           ; 1 bytes @ 0x5
   268                           
   269     0075                     ___awmod@counter:	
   270                           ; 1 bytes @ 0x5
   271                           
   272                           
   273                           ; 1 bytes @ 0x5
   274     0075                     	ds	1
   275     0076                     _disp7seg$54:
   276     0076                     ___awdiv@sign:	
   277                           ; 1 bytes @ 0x6
   278                           
   279     0076                     ___awmod@sign:	
   280                           ; 1 bytes @ 0x6
   281                           
   282                           
   283                           ; 1 bytes @ 0x6
   284     0076                     	ds	1
   285     0077                     _disp7seg$55:
   286     0077                     ___awdiv@quotient:	
   287                           ; 1 bytes @ 0x7
   288                           
   289                           
   290                           ; 2 bytes @ 0x7
   291     0077                     	ds	2
   292     0079                     ?_multiplex:
   293     0079                     multiplex@n:	
   294                           ; 1 bytes @ 0x9
   295                           
   296                           
   297                           ; 2 bytes @ 0x9
   298     0079                     	ds	2
   299     007B                     ??_multiplex:
   300                           
   301                           ; 1 bytes @ 0xB
   302     007B                     	ds	1
   303     007C                     ??_main:
   304                           
   305                           ; 1 bytes @ 0xC
   306     007C                     	ds	2
   307                           
   308                           	psect	cstackBANK0
   309     0020                     __pcstackBANK0:
   310     0020                     multiplex@decena:
   311                           
   312                           ; 2 bytes @ 0x0
   313     0020                     	ds	2
   314     0022                     multiplex@unidad:
   315                           
   316                           ; 2 bytes @ 0x2
   317     0022                     	ds	2
   318                           
   319                           	psect	maintext
   320     062C                     __pmaintext:	
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 45 in file "main.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2, status,0, pclath, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : B1F/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   344 ;;Total ram usage:        2 bytes
   345 ;; Hardware stack levels required when called: 2
   346 ;; This function calls:
   347 ;;		_multiplex
   348 ;; This function is called by:
   349 ;;		Startup code after reset
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353     062C                     _main:	
   354                           ;psect for function _main
   355                           
   356     062C                     l959:	
   357                           ;incstack = 0
   358                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   359                           
   360                           
   361                           ;main.c: 46:     OSCCON = 0x6A;
   362     062C  306A               	movlw	106
   363     062D  0021               	movlb	1	; select bank1
   364     062E  0099               	movwf	25	;volatile
   365     062F                     l961:
   366                           
   367                           ;main.c: 47:     TRISD = 0x00;
   368     062F  018F               	clrf	15	;volatile
   369     0630                     l963:
   370                           
   371                           ;main.c: 48:     TRISB = 0xFF;
   372     0630  30FF               	movlw	255
   373     0631  008D               	movwf	13	;volatile
   374                           
   375                           ;main.c: 49:     TRISE = 0x00;
   376     0632  0190               	clrf	16	;volatile
   377                           
   378                           ;main.c: 50:     ANSELD = 0x00;
   379     0633  0023               	movlb	3	; select bank3
   380     0634  018F               	clrf	15	;volatile
   381                           
   382                           ;main.c: 51:     ANSELB = 0x00;
   383     0635  018D               	clrf	13	;volatile
   384                           
   385                           ;main.c: 52:     ANSELE = 0x00;
   386     0636  0190               	clrf	16	;volatile
   387     0637                     l965:
   388                           
   389                           ;main.c: 53:     PORTD = 0xFF;
   390     0637  30FF               	movlw	255
   391     0638  0020               	movlb	0	; select bank0
   392     0639  008F               	movwf	15	;volatile
   393     063A                     l967:
   394                           
   395                           ;main.c: 55:         for (i = 0;(i<100 && RB0 == 1 && BT_ant == 0); i++) {
   396     063A  0020               	movlb	0	; select bank0
   397     063B  01A4               	clrf	_i
   398     063C  01A5               	clrf	_i+1
   399     063D  2E5C               	goto	l977
   400     063E                     l969:
   401                           
   402                           ;main.c: 56:             multiplex(i);
   403     063E  0825               	movf	_i+1,w
   404     063F  00FA               	movwf	multiplex@n+1
   405     0640  0824               	movf	_i,w
   406     0641  00F9               	movwf	multiplex@n
   407     0642  3185  25E7  3186   	fcall	_multiplex
   408     0645                     l971:
   409                           
   410                           ;main.c: 57:             _delay((unsigned long)((100)*(4000000/4000.0)));
   411     0645  3082               	movlw	130
   412     0646  00FC               	movwf	??_main
   413     0647  30DE               	movlw	222
   414     0648                     u937:
   415     0648  0B89               	decfsz	9,f
   416     0649  2E48               	goto	u937
   417     064A  0BFC               	decfsz	??_main,f
   418     064B  2E48               	goto	u937
   419     064C                     l973:
   420                           
   421                           ;main.c: 58:             BT_ant = RB0;
   422     064C  1003               	clrc
   423     064D  0020               	movlb	0	; select bank0
   424     064E  180D               	btfsc	13,0	;volatile
   425     064F  1403               	setc
   426     0650  3000               	movlw	0
   427     0651  3D09               	addwfc	9,w
   428     0652  00FC               	movwf	??_main
   429     0653  01FD               	clrf	??_main+1
   430     0654  087C               	movf	??_main,w
   431     0655  00A6               	movwf	_BT_ant
   432     0656  087D               	movf	??_main+1,w
   433     0657  00A7               	movwf	_BT_ant+1
   434     0658                     l975:
   435                           
   436                           ;main.c: 59:         }
   437     0658  3001               	movlw	1
   438     0659  07A4               	addwf	_i,f
   439     065A  3000               	movlw	0
   440     065B  3DA5               	addwfc	_i+1,f
   441     065C                     l977:
   442     065C  0825               	movf	_i+1,w
   443     065D  3A80               	xorlw	128
   444     065E  00FC               	movwf	??_main
   445     065F  3080               	movlw	128
   446     0660  027C               	subwf	??_main,w
   447     0661  1D03               	skipz
   448     0662  2E65               	goto	u905
   449     0663  3064               	movlw	100
   450     0664  0224               	subwf	_i,w
   451     0665                     u905:
   452     0665  1803               	skipnc
   453     0666  2E68               	goto	u901
   454     0667  2E69               	goto	u900
   455     0668                     u901:
   456     0668  2E3A               	goto	l967
   457     0669                     u900:
   458     0669                     l979:
   459     0669  0020               	movlb	0	; select bank0
   460     066A  1C0D               	btfss	13,0	;volatile
   461     066B  2E6D               	goto	u911
   462     066C  2E6E               	goto	u910
   463     066D                     u911:
   464     066D  2E3A               	goto	l967
   465     066E                     u910:
   466     066E                     l981:
   467     066E  0826               	movf	_BT_ant,w
   468     066F  0427               	iorwf	_BT_ant+1,w
   469     0670  1903               	btfsc	3,2
   470     0671  2E73               	goto	u921
   471     0672  2E74               	goto	u920
   472     0673                     u921:
   473     0673  2E3E               	goto	l969
   474     0674                     u920:
   475     0674  2E3A               	goto	l967
   476     0675  3180  2802         	ljmp	start
   477     0677                     __end_of_main:
   478                           
   479                           	psect	text1
   480     05E7                     __ptext1:	
   481 ;; *************** function _multiplex *****************
   482 ;; Defined at:
   483 ;;		line 32 in file "main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  n               2    9[COMMON] int 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  unidad          2    2[BANK0 ] int 
   488 ;;  decena          2    0[BANK0 ] int 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, pclath, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   499 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   501 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   502 ;;Total ram usage:        7 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 1
   505 ;; This function calls:
   506 ;;		___awdiv
   507 ;;		___awmod
   508 ;;		_disp7seg
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514     05E7                     _multiplex:	
   515                           ;psect for function _multiplex
   516                           
   517     05E7                     l945:	
   518                           ;incstack = 0
   519                           ; Regs used in _multiplex: [wreg+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;main.c: 33:     int decena = n/10;
   523     05E7  300A               	movlw	10
   524     05E8  00F0               	movwf	___awdiv@divisor
   525     05E9  3000               	movlw	0
   526     05EA  00F1               	movwf	___awdiv@divisor+1
   527     05EB  087A               	movf	multiplex@n+1,w
   528     05EC  00F3               	movwf	___awdiv@dividend+1
   529     05ED  0879               	movf	multiplex@n,w
   530     05EE  00F2               	movwf	___awdiv@dividend
   531     05EF  3186  26CA  3185   	fcall	___awdiv
   532     05F2  0871               	movf	?___awdiv+1,w
   533     05F3  0020               	movlb	0	; select bank0
   534     05F4  00A1               	movwf	multiplex@decena+1
   535     05F5  0870               	movf	?___awdiv,w
   536     05F6  00A0               	movwf	multiplex@decena
   537                           
   538                           ;main.c: 34:     int unidad = n%10;
   539     05F7  300A               	movlw	10
   540     05F8  00F0               	movwf	___awmod@divisor
   541     05F9  3000               	movlw	0
   542     05FA  00F1               	movwf	___awmod@divisor+1
   543     05FB  087A               	movf	multiplex@n+1,w
   544     05FC  00F3               	movwf	___awmod@dividend+1
   545     05FD  0879               	movf	multiplex@n,w
   546     05FE  00F2               	movwf	___awmod@dividend
   547     05FF  3186  2677  3185   	fcall	___awmod
   548     0602  0871               	movf	?___awmod+1,w
   549     0603  0020               	movlb	0	; select bank0
   550     0604  00A3               	movwf	multiplex@unidad+1
   551     0605  0870               	movf	?___awmod,w
   552     0606  00A2               	movwf	multiplex@unidad
   553                           
   554                           ;main.c: 35:     disp7seg(unidad);
   555     0607  0823               	movf	multiplex@unidad+1,w
   556     0608  00F1               	movwf	disp7seg@n+1
   557     0609  0822               	movf	multiplex@unidad,w
   558     060A  00F0               	movwf	disp7seg@n
   559     060B  3187  2729  3185   	fcall	_disp7seg
   560     060E                     l947:
   561                           
   562                           ;main.c: 36:     RE1 = 1;
   563     060E  0020               	movlb	0	; select bank0
   564     060F  1490               	bsf	16,1	;volatile
   565     0610                     l949:
   566                           
   567                           ;main.c: 37:     _delay((unsigned long)((10)*(4000000/4000.0)));
   568     0610  300D               	movlw	13
   569     0611  00FB               	movwf	??_multiplex
   570     0612  30FC               	movlw	252
   571     0613                     u947:
   572     0613  0B89               	decfsz	9,f
   573     0614  2E13               	goto	u947
   574     0615  0BFB               	decfsz	??_multiplex,f
   575     0616  2E13               	goto	u947
   576     0617                     l951:
   577                           
   578                           ;main.c: 38:     RE1 = 0;
   579     0617  0020               	movlb	0	; select bank0
   580     0618  1090               	bcf	16,1	;volatile
   581     0619                     l953:
   582                           
   583                           ;main.c: 39:     disp7seg(decena);
   584     0619  0821               	movf	multiplex@decena+1,w
   585     061A  00F1               	movwf	disp7seg@n+1
   586     061B  0820               	movf	multiplex@decena,w
   587     061C  00F0               	movwf	disp7seg@n
   588     061D  3187  2729  3185   	fcall	_disp7seg
   589     0620                     l955:
   590                           
   591                           ;main.c: 40:     RE0 = 1;
   592     0620  0020               	movlb	0	; select bank0
   593     0621  1410               	bsf	16,0	;volatile
   594                           
   595                           ;main.c: 41:     _delay((unsigned long)((10)*(4000000/4000.0)));
   596     0622  300D               	movlw	13
   597     0623  00FB               	movwf	??_multiplex
   598     0624  30FC               	movlw	252
   599     0625                     u957:
   600     0625  0B89               	decfsz	9,f
   601     0626  2E25               	goto	u957
   602     0627  0BFB               	decfsz	??_multiplex,f
   603     0628  2E25               	goto	u957
   604     0629                     l957:
   605                           
   606                           ;main.c: 42:     RE0 = 0;
   607     0629  0020               	movlb	0	; select bank0
   608     062A  1010               	bcf	16,0	;volatile
   609     062B                     l60:
   610     062B  0008               	return
   611     062C                     __end_of_multiplex:
   612                           
   613                           	psect	text2
   614     0729                     __ptext2:	
   615 ;; *************** function _disp7seg *****************
   616 ;; Defined at:
   617 ;;		line 22 in file "main.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  n               2    0[COMMON] int 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   632 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   634 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   635 ;;Total ram usage:        8 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_multiplex
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644     0729                     _disp7seg:	
   645                           ;psect for function _disp7seg
   646                           
   647     0729                     l791:	
   648                           ;incstack = 0
   649                           ; Regs used in _disp7seg: [wreg+status,2+status,0]
   650                           
   651                           
   652                           ;main.c: 23:     RD0 = (n != 1 && n != 6 && n != 4);
   653     0729  01F2               	clrf	_disp7seg$50
   654     072A                     l793:
   655     072A  0370               	decf	disp7seg@n,w
   656     072B  0471               	iorwf	disp7seg@n+1,w
   657     072C  1903               	btfsc	3,2
   658     072D  2F2F               	goto	u471
   659     072E  2F30               	goto	u470
   660     072F                     u471:
   661     072F  2F40               	goto	l801
   662     0730                     u470:
   663     0730                     l795:
   664     0730  3006               	movlw	6
   665     0731  0670               	xorwf	disp7seg@n,w
   666     0732  0471               	iorwf	disp7seg@n+1,w
   667     0733  1903               	btfsc	3,2
   668     0734  2F36               	goto	u481
   669     0735  2F37               	goto	u480
   670     0736                     u481:
   671     0736  2F40               	goto	l801
   672     0737                     u480:
   673     0737                     l797:
   674     0737  3004               	movlw	4
   675     0738  0670               	xorwf	disp7seg@n,w
   676     0739  0471               	iorwf	disp7seg@n+1,w
   677     073A  1903               	btfsc	3,2
   678     073B  2F3D               	goto	u491
   679     073C  2F3E               	goto	u490
   680     073D                     u491:
   681     073D  2F40               	goto	l801
   682     073E                     u490:
   683     073E                     l799:
   684     073E  01F2               	clrf	_disp7seg$50
   685     073F  0AF2               	incf	_disp7seg$50,f
   686     0740                     l801:
   687     0740  0C72               	rrf	_disp7seg$50,w
   688     0741  0020               	movlb	0	; select bank0
   689     0742  1C03               	skipc
   690     0743  100F               	bcf	15,0	;volatile
   691     0744  1803               	skipnc
   692     0745  140F               	bsf	15,0	;volatile
   693     0746                     l803:
   694                           
   695                           ;main.c: 24:     RD1 = (n != 5 && n != 6);
   696     0746  01F3               	clrf	_disp7seg$51
   697     0747  3005               	movlw	5
   698     0748  0670               	xorwf	disp7seg@n,w
   699     0749  0471               	iorwf	disp7seg@n+1,w
   700     074A  1903               	btfsc	3,2
   701     074B  2F4D               	goto	u501
   702     074C  2F4E               	goto	u500
   703     074D                     u501:
   704     074D  2F57               	goto	l809
   705     074E                     u500:
   706     074E                     l805:
   707     074E  3006               	movlw	6
   708     074F  0670               	xorwf	disp7seg@n,w
   709     0750  0471               	iorwf	disp7seg@n+1,w
   710     0751  1903               	btfsc	3,2
   711     0752  2F54               	goto	u511
   712     0753  2F55               	goto	u510
   713     0754                     u511:
   714     0754  2F57               	goto	l809
   715     0755                     u510:
   716     0755                     l807:
   717     0755  01F3               	clrf	_disp7seg$51
   718     0756  0AF3               	incf	_disp7seg$51,f
   719     0757                     l809:
   720     0757  0C73               	rrf	_disp7seg$51,w
   721     0758  1C03               	skipc
   722     0759  108F               	bcf	15,1	;volatile
   723     075A  1803               	skipnc
   724     075B  148F               	bsf	15,1	;volatile
   725     075C                     l811:
   726                           
   727                           ;main.c: 25:     RD2 = (n != 2);
   728     075C  3002               	movlw	2
   729     075D  0670               	xorwf	disp7seg@n,w
   730     075E  0471               	iorwf	disp7seg@n+1,w
   731     075F  1D03               	btfss	3,2
   732     0760  2F62               	goto	u521
   733     0761  2F65               	goto	u520
   734     0762                     u521:
   735     0762  0020               	movlb	0	; select bank0
   736     0763  150F               	bsf	15,2	;volatile
   737     0764  2F67               	goto	u534
   738     0765                     u520:
   739     0765  0020               	movlb	0	; select bank0
   740     0766  110F               	bcf	15,2	;volatile
   741     0767                     u534:
   742                           
   743                           ;main.c: 26:     RD3 = (n != 1 && n != 4 && n != 7 && n != 9);
   744     0767  01F4               	clrf	_disp7seg$52
   745     0768                     l813:
   746     0768  0370               	decf	disp7seg@n,w
   747     0769  0471               	iorwf	disp7seg@n+1,w
   748     076A  1903               	btfsc	3,2
   749     076B  2F6D               	goto	u541
   750     076C  2F6E               	goto	u540
   751     076D                     u541:
   752     076D  2F85               	goto	l823
   753     076E                     u540:
   754     076E                     l815:
   755     076E  3004               	movlw	4
   756     076F  0670               	xorwf	disp7seg@n,w
   757     0770  0471               	iorwf	disp7seg@n+1,w
   758     0771  1903               	btfsc	3,2
   759     0772  2F74               	goto	u551
   760     0773  2F75               	goto	u550
   761     0774                     u551:
   762     0774  2F85               	goto	l823
   763     0775                     u550:
   764     0775                     l817:
   765     0775  3007               	movlw	7
   766     0776  0670               	xorwf	disp7seg@n,w
   767     0777  0471               	iorwf	disp7seg@n+1,w
   768     0778  1903               	btfsc	3,2
   769     0779  2F7B               	goto	u561
   770     077A  2F7C               	goto	u560
   771     077B                     u561:
   772     077B  2F85               	goto	l823
   773     077C                     u560:
   774     077C                     l819:
   775     077C  3009               	movlw	9
   776     077D  0670               	xorwf	disp7seg@n,w
   777     077E  0471               	iorwf	disp7seg@n+1,w
   778     077F  1903               	btfsc	3,2
   779     0780  2F82               	goto	u571
   780     0781  2F83               	goto	u570
   781     0782                     u571:
   782     0782  2F85               	goto	l823
   783     0783                     u570:
   784     0783                     l821:
   785     0783  01F4               	clrf	_disp7seg$52
   786     0784  0AF4               	incf	_disp7seg$52,f
   787     0785                     l823:
   788     0785  0C74               	rrf	_disp7seg$52,w
   789     0786  1C03               	skipc
   790     0787  118F               	bcf	15,3	;volatile
   791     0788  1803               	skipnc
   792     0789  158F               	bsf	15,3	;volatile
   793     078A                     l825:
   794                           
   795                           ;main.c: 27:     RD4 = (n != 1 && n != 3 && n != 4 && n != 5 && n != 7 && n != 9);
   796     078A  01F5               	clrf	_disp7seg$53
   797     078B  0370               	decf	disp7seg@n,w
   798     078C  0471               	iorwf	disp7seg@n+1,w
   799     078D  1903               	btfsc	3,2
   800     078E  2F90               	goto	u581
   801     078F  2F91               	goto	u580
   802     0790                     u581:
   803     0790  2FB6               	goto	l839
   804     0791                     u580:
   805     0791                     l827:
   806     0791  3003               	movlw	3
   807     0792  0670               	xorwf	disp7seg@n,w
   808     0793  0471               	iorwf	disp7seg@n+1,w
   809     0794  1903               	btfsc	3,2
   810     0795  2F97               	goto	u591
   811     0796  2F98               	goto	u590
   812     0797                     u591:
   813     0797  2FB6               	goto	l839
   814     0798                     u590:
   815     0798                     l829:
   816     0798  3004               	movlw	4
   817     0799  0670               	xorwf	disp7seg@n,w
   818     079A  0471               	iorwf	disp7seg@n+1,w
   819     079B  1903               	btfsc	3,2
   820     079C  2F9E               	goto	u601
   821     079D  2F9F               	goto	u600
   822     079E                     u601:
   823     079E  2FB6               	goto	l839
   824     079F                     u600:
   825     079F                     l831:
   826     079F  3005               	movlw	5
   827     07A0  0670               	xorwf	disp7seg@n,w
   828     07A1  0471               	iorwf	disp7seg@n+1,w
   829     07A2  1903               	btfsc	3,2
   830     07A3  2FA5               	goto	u611
   831     07A4  2FA6               	goto	u610
   832     07A5                     u611:
   833     07A5  2FB6               	goto	l839
   834     07A6                     u610:
   835     07A6                     l833:
   836     07A6  3007               	movlw	7
   837     07A7  0670               	xorwf	disp7seg@n,w
   838     07A8  0471               	iorwf	disp7seg@n+1,w
   839     07A9  1903               	btfsc	3,2
   840     07AA  2FAC               	goto	u621
   841     07AB  2FAD               	goto	u620
   842     07AC                     u621:
   843     07AC  2FB6               	goto	l839
   844     07AD                     u620:
   845     07AD                     l835:
   846     07AD  3009               	movlw	9
   847     07AE  0670               	xorwf	disp7seg@n,w
   848     07AF  0471               	iorwf	disp7seg@n+1,w
   849     07B0  1903               	btfsc	3,2
   850     07B1  2FB3               	goto	u631
   851     07B2  2FB4               	goto	u630
   852     07B3                     u631:
   853     07B3  2FB6               	goto	l839
   854     07B4                     u630:
   855     07B4                     l837:
   856     07B4  01F5               	clrf	_disp7seg$53
   857     07B5  0AF5               	incf	_disp7seg$53,f
   858     07B6                     l839:
   859     07B6  0C75               	rrf	_disp7seg$53,w
   860     07B7  1C03               	skipc
   861     07B8  120F               	bcf	15,4	;volatile
   862     07B9  1803               	skipnc
   863     07BA  160F               	bsf	15,4	;volatile
   864     07BB                     l841:
   865                           
   866                           ;main.c: 28:     RD5 = (n != 1 && n != 2 && n != 3 && n != 7);
   867     07BB  01F6               	clrf	_disp7seg$54
   868     07BC  0370               	decf	disp7seg@n,w
   869     07BD  0471               	iorwf	disp7seg@n+1,w
   870     07BE  1903               	btfsc	3,2
   871     07BF  2FC1               	goto	u641
   872     07C0  2FC2               	goto	u640
   873     07C1                     u641:
   874     07C1  2FD9               	goto	l851
   875     07C2                     u640:
   876     07C2                     l843:
   877     07C2  3002               	movlw	2
   878     07C3  0670               	xorwf	disp7seg@n,w
   879     07C4  0471               	iorwf	disp7seg@n+1,w
   880     07C5  1903               	btfsc	3,2
   881     07C6  2FC8               	goto	u651
   882     07C7  2FC9               	goto	u650
   883     07C8                     u651:
   884     07C8  2FD9               	goto	l851
   885     07C9                     u650:
   886     07C9                     l845:
   887     07C9  3003               	movlw	3
   888     07CA  0670               	xorwf	disp7seg@n,w
   889     07CB  0471               	iorwf	disp7seg@n+1,w
   890     07CC  1903               	btfsc	3,2
   891     07CD  2FCF               	goto	u661
   892     07CE  2FD0               	goto	u660
   893     07CF                     u661:
   894     07CF  2FD9               	goto	l851
   895     07D0                     u660:
   896     07D0                     l847:
   897     07D0  3007               	movlw	7
   898     07D1  0670               	xorwf	disp7seg@n,w
   899     07D2  0471               	iorwf	disp7seg@n+1,w
   900     07D3  1903               	btfsc	3,2
   901     07D4  2FD6               	goto	u671
   902     07D5  2FD7               	goto	u670
   903     07D6                     u671:
   904     07D6  2FD9               	goto	l851
   905     07D7                     u670:
   906     07D7                     l849:
   907     07D7  01F6               	clrf	_disp7seg$54
   908     07D8  0AF6               	incf	_disp7seg$54,f
   909     07D9                     l851:
   910     07D9  0C76               	rrf	_disp7seg$54,w
   911     07DA  1C03               	skipc
   912     07DB  128F               	bcf	15,5	;volatile
   913     07DC  1803               	skipnc
   914     07DD  168F               	bsf	15,5	;volatile
   915     07DE                     l853:
   916                           
   917                           ;main.c: 29:     RD6 = (n != 0 && n != 1 && n != 7);
   918     07DE  01F7               	clrf	_disp7seg$55
   919     07DF  0870               	movf	disp7seg@n,w
   920     07E0  0471               	iorwf	disp7seg@n+1,w
   921     07E1  1903               	btfsc	3,2
   922     07E2  2FE4               	goto	u681
   923     07E3  2FE5               	goto	u680
   924     07E4                     u681:
   925     07E4  2FF4               	goto	l861
   926     07E5                     u680:
   927     07E5                     l855:
   928     07E5  0370               	decf	disp7seg@n,w
   929     07E6  0471               	iorwf	disp7seg@n+1,w
   930     07E7  1903               	btfsc	3,2
   931     07E8  2FEA               	goto	u691
   932     07E9  2FEB               	goto	u690
   933     07EA                     u691:
   934     07EA  2FF4               	goto	l861
   935     07EB                     u690:
   936     07EB                     l857:
   937     07EB  3007               	movlw	7
   938     07EC  0670               	xorwf	disp7seg@n,w
   939     07ED  0471               	iorwf	disp7seg@n+1,w
   940     07EE  1903               	btfsc	3,2
   941     07EF  2FF1               	goto	u701
   942     07F0  2FF2               	goto	u700
   943     07F1                     u701:
   944     07F1  2FF4               	goto	l861
   945     07F2                     u700:
   946     07F2                     l859:
   947     07F2  01F7               	clrf	_disp7seg$55
   948     07F3  0AF7               	incf	_disp7seg$55,f
   949     07F4                     l861:
   950     07F4  0C77               	rrf	_disp7seg$55,w
   951     07F5  1C03               	skipc
   952     07F6  130F               	bcf	15,6	;volatile
   953     07F7  1803               	skipnc
   954     07F8  170F               	bsf	15,6	;volatile
   955     07F9                     l57:
   956     07F9  0008               	return
   957     07FA                     __end_of_disp7seg:
   958                           
   959                           	psect	text3
   960     0677                     __ptext3:	
   961 ;; *************** function ___awmod *****************
   962 ;; Defined at:
   963 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;  divisor         2    0[COMMON] int 
   966 ;;  dividend        2    2[COMMON] int 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  sign            1    6[COMMON] unsigned char 
   969 ;;  counter         1    5[COMMON] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  2    0[COMMON] int 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   980 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   982 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   983 ;;Total ram usage:        7 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_multiplex
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992     0677                     ___awmod:	
   993                           ;psect for function ___awmod
   994                           
   995     0677                     l907:	
   996                           ;incstack = 0
   997                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   998                           
   999     0677  01F6               	clrf	___awmod@sign
  1000     0678                     l909:
  1001     0678  1FF3               	btfss	___awmod@dividend+1,7
  1002     0679  2E7B               	goto	u811
  1003     067A  2E7C               	goto	u810
  1004     067B                     u811:
  1005     067B  2E83               	goto	l915
  1006     067C                     u810:
  1007     067C                     l911:
  1008     067C  09F2               	comf	___awmod@dividend,f
  1009     067D  09F3               	comf	___awmod@dividend+1,f
  1010     067E  0AF2               	incf	___awmod@dividend,f
  1011     067F  1903               	skipnz
  1012     0680  0AF3               	incf	___awmod@dividend+1,f
  1013     0681                     l913:
  1014     0681  01F6               	clrf	___awmod@sign
  1015     0682  0AF6               	incf	___awmod@sign,f
  1016     0683                     l915:
  1017     0683  1FF1               	btfss	___awmod@divisor+1,7
  1018     0684  2E86               	goto	u821
  1019     0685  2E87               	goto	u820
  1020     0686                     u821:
  1021     0686  2E8C               	goto	l919
  1022     0687                     u820:
  1023     0687                     l917:
  1024     0687  09F0               	comf	___awmod@divisor,f
  1025     0688  09F1               	comf	___awmod@divisor+1,f
  1026     0689  0AF0               	incf	___awmod@divisor,f
  1027     068A  1903               	skipnz
  1028     068B  0AF1               	incf	___awmod@divisor+1,f
  1029     068C                     l919:
  1030     068C  0870               	movf	___awmod@divisor,w
  1031     068D  0471               	iorwf	___awmod@divisor+1,w
  1032     068E  1903               	btfsc	3,2
  1033     068F  2E91               	goto	u831
  1034     0690  2E92               	goto	u830
  1035     0691                     u831:
  1036     0691  2EBB               	goto	l937
  1037     0692                     u830:
  1038     0692                     l921:
  1039     0692  01F5               	clrf	___awmod@counter
  1040     0693  0AF5               	incf	___awmod@counter,f
  1041     0694  2E9E               	goto	l927
  1042     0695                     l923:
  1043     0695  3001               	movlw	1
  1044     0696                     u845:
  1045     0696  35F0               	lslf	___awmod@divisor,f
  1046     0697  0DF1               	rlf	___awmod@divisor+1,f
  1047     0698  0B89               	decfsz	9,f
  1048     0699  2E96               	goto	u845
  1049     069A                     l925:
  1050     069A  3001               	movlw	1
  1051     069B  00F4               	movwf	??___awmod
  1052     069C  0874               	movf	??___awmod,w
  1053     069D  07F5               	addwf	___awmod@counter,f
  1054     069E                     l927:
  1055     069E  1FF1               	btfss	___awmod@divisor+1,7
  1056     069F  2EA1               	goto	u851
  1057     06A0  2EA2               	goto	u850
  1058     06A1                     u851:
  1059     06A1  2E95               	goto	l923
  1060     06A2                     u850:
  1061     06A2                     l929:
  1062     06A2  0871               	movf	___awmod@divisor+1,w
  1063     06A3  0273               	subwf	___awmod@dividend+1,w
  1064     06A4  1D03               	skipz
  1065     06A5  2EA8               	goto	u865
  1066     06A6  0870               	movf	___awmod@divisor,w
  1067     06A7  0272               	subwf	___awmod@dividend,w
  1068     06A8                     u865:
  1069     06A8  1C03               	skipc
  1070     06A9  2EAB               	goto	u861
  1071     06AA  2EAC               	goto	u860
  1072     06AB                     u861:
  1073     06AB  2EB0               	goto	l933
  1074     06AC                     u860:
  1075     06AC                     l931:
  1076     06AC  0870               	movf	___awmod@divisor,w
  1077     06AD  02F2               	subwf	___awmod@dividend,f
  1078     06AE  0871               	movf	___awmod@divisor+1,w
  1079     06AF  3BF3               	subwfb	___awmod@dividend+1,f
  1080     06B0                     l933:
  1081     06B0  3001               	movlw	1
  1082     06B1                     u875:
  1083     06B1  36F1               	lsrf	___awmod@divisor+1,f
  1084     06B2  0CF0               	rrf	___awmod@divisor,f
  1085     06B3  0B89               	decfsz	9,f
  1086     06B4  2EB1               	goto	u875
  1087     06B5                     l935:
  1088     06B5  3001               	movlw	1
  1089     06B6  02F5               	subwf	___awmod@counter,f
  1090     06B7  1D03               	btfss	3,2
  1091     06B8  2EBA               	goto	u881
  1092     06B9  2EBB               	goto	u880
  1093     06BA                     u881:
  1094     06BA  2EA2               	goto	l929
  1095     06BB                     u880:
  1096     06BB                     l937:
  1097     06BB  0876               	movf	___awmod@sign,w
  1098     06BC  1903               	btfsc	3,2
  1099     06BD  2EBF               	goto	u891
  1100     06BE  2EC0               	goto	u890
  1101     06BF                     u891:
  1102     06BF  2EC5               	goto	l941
  1103     06C0                     u890:
  1104     06C0                     l939:
  1105     06C0  09F2               	comf	___awmod@dividend,f
  1106     06C1  09F3               	comf	___awmod@dividend+1,f
  1107     06C2  0AF2               	incf	___awmod@dividend,f
  1108     06C3  1903               	skipnz
  1109     06C4  0AF3               	incf	___awmod@dividend+1,f
  1110     06C5                     l941:
  1111     06C5  0873               	movf	___awmod@dividend+1,w
  1112     06C6  00F1               	movwf	?___awmod+1
  1113     06C7  0872               	movf	___awmod@dividend,w
  1114     06C8  00F0               	movwf	?___awmod
  1115     06C9                     l307:
  1116     06C9  0008               	return
  1117     06CA                     __end_of___awmod:
  1118                           
  1119                           	psect	text4
  1120     06CA                     __ptext4:	
  1121 ;; *************** function ___awdiv *****************
  1122 ;; Defined at:
  1123 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;  divisor         2    0[COMMON] int 
  1126 ;;  dividend        2    2[COMMON] int 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  quotient        2    7[COMMON] int 
  1129 ;;  sign            1    6[COMMON] unsigned char 
  1130 ;;  counter         1    5[COMMON] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2    0[COMMON] int 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1141 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1142 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1143 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1144 ;;Total ram usage:        9 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_multiplex
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153     06CA                     ___awdiv:	
  1154                           ;psect for function ___awdiv
  1155                           
  1156     06CA                     l863:	
  1157                           ;incstack = 0
  1158                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1159                           
  1160     06CA  01F6               	clrf	___awdiv@sign
  1161     06CB                     l865:
  1162     06CB  1FF1               	btfss	___awdiv@divisor+1,7
  1163     06CC  2ECE               	goto	u711
  1164     06CD  2ECF               	goto	u710
  1165     06CE                     u711:
  1166     06CE  2ED6               	goto	l871
  1167     06CF                     u710:
  1168     06CF                     l867:
  1169     06CF  09F0               	comf	___awdiv@divisor,f
  1170     06D0  09F1               	comf	___awdiv@divisor+1,f
  1171     06D1  0AF0               	incf	___awdiv@divisor,f
  1172     06D2  1903               	skipnz
  1173     06D3  0AF1               	incf	___awdiv@divisor+1,f
  1174     06D4                     l869:
  1175     06D4  01F6               	clrf	___awdiv@sign
  1176     06D5  0AF6               	incf	___awdiv@sign,f
  1177     06D6                     l871:
  1178     06D6  1FF3               	btfss	___awdiv@dividend+1,7
  1179     06D7  2ED9               	goto	u721
  1180     06D8  2EDA               	goto	u720
  1181     06D9                     u721:
  1182     06D9  2EE3               	goto	l877
  1183     06DA                     u720:
  1184     06DA                     l873:
  1185     06DA  09F2               	comf	___awdiv@dividend,f
  1186     06DB  09F3               	comf	___awdiv@dividend+1,f
  1187     06DC  0AF2               	incf	___awdiv@dividend,f
  1188     06DD  1903               	skipnz
  1189     06DE  0AF3               	incf	___awdiv@dividend+1,f
  1190     06DF                     l875:
  1191     06DF  3001               	movlw	1
  1192     06E0  00F4               	movwf	??___awdiv
  1193     06E1  0874               	movf	??___awdiv,w
  1194     06E2  06F6               	xorwf	___awdiv@sign,f
  1195     06E3                     l877:
  1196     06E3  01F7               	clrf	___awdiv@quotient
  1197     06E4  01F8               	clrf	___awdiv@quotient+1
  1198     06E5                     l879:
  1199     06E5  0870               	movf	___awdiv@divisor,w
  1200     06E6  0471               	iorwf	___awdiv@divisor+1,w
  1201     06E7  1903               	btfsc	3,2
  1202     06E8  2EEA               	goto	u731
  1203     06E9  2EEB               	goto	u730
  1204     06EA                     u731:
  1205     06EA  2F1A               	goto	l899
  1206     06EB                     u730:
  1207     06EB                     l881:
  1208     06EB  01F5               	clrf	___awdiv@counter
  1209     06EC  0AF5               	incf	___awdiv@counter,f
  1210     06ED  2EF7               	goto	l887
  1211     06EE                     l883:
  1212     06EE  3001               	movlw	1
  1213     06EF                     u745:
  1214     06EF  35F0               	lslf	___awdiv@divisor,f
  1215     06F0  0DF1               	rlf	___awdiv@divisor+1,f
  1216     06F1  0B89               	decfsz	9,f
  1217     06F2  2EEF               	goto	u745
  1218     06F3                     l885:
  1219     06F3  3001               	movlw	1
  1220     06F4  00F4               	movwf	??___awdiv
  1221     06F5  0874               	movf	??___awdiv,w
  1222     06F6  07F5               	addwf	___awdiv@counter,f
  1223     06F7                     l887:
  1224     06F7  1FF1               	btfss	___awdiv@divisor+1,7
  1225     06F8  2EFA               	goto	u751
  1226     06F9  2EFB               	goto	u750
  1227     06FA                     u751:
  1228     06FA  2EEE               	goto	l883
  1229     06FB                     u750:
  1230     06FB                     l889:
  1231     06FB  3001               	movlw	1
  1232     06FC                     u765:
  1233     06FC  35F7               	lslf	___awdiv@quotient,f
  1234     06FD  0DF8               	rlf	___awdiv@quotient+1,f
  1235     06FE  0B89               	decfsz	9,f
  1236     06FF  2EFC               	goto	u765
  1237     0700  0871               	movf	___awdiv@divisor+1,w
  1238     0701  0273               	subwf	___awdiv@dividend+1,w
  1239     0702  1D03               	skipz
  1240     0703  2F06               	goto	u775
  1241     0704  0870               	movf	___awdiv@divisor,w
  1242     0705  0272               	subwf	___awdiv@dividend,w
  1243     0706                     u775:
  1244     0706  1C03               	skipc
  1245     0707  2F09               	goto	u771
  1246     0708  2F0A               	goto	u770
  1247     0709                     u771:
  1248     0709  2F0F               	goto	l895
  1249     070A                     u770:
  1250     070A                     l891:
  1251     070A  0870               	movf	___awdiv@divisor,w
  1252     070B  02F2               	subwf	___awdiv@dividend,f
  1253     070C  0871               	movf	___awdiv@divisor+1,w
  1254     070D  3BF3               	subwfb	___awdiv@dividend+1,f
  1255     070E                     l893:
  1256     070E  1477               	bsf	___awdiv@quotient,0
  1257     070F                     l895:
  1258     070F  3001               	movlw	1
  1259     0710                     u785:
  1260     0710  36F1               	lsrf	___awdiv@divisor+1,f
  1261     0711  0CF0               	rrf	___awdiv@divisor,f
  1262     0712  0B89               	decfsz	9,f
  1263     0713  2F10               	goto	u785
  1264     0714                     l897:
  1265     0714  3001               	movlw	1
  1266     0715  02F5               	subwf	___awdiv@counter,f
  1267     0716  1D03               	btfss	3,2
  1268     0717  2F19               	goto	u791
  1269     0718  2F1A               	goto	u790
  1270     0719                     u791:
  1271     0719  2EFB               	goto	l889
  1272     071A                     u790:
  1273     071A                     l899:
  1274     071A  0876               	movf	___awdiv@sign,w
  1275     071B  1903               	btfsc	3,2
  1276     071C  2F1E               	goto	u801
  1277     071D  2F1F               	goto	u800
  1278     071E                     u801:
  1279     071E  2F24               	goto	l903
  1280     071F                     u800:
  1281     071F                     l901:
  1282     071F  09F7               	comf	___awdiv@quotient,f
  1283     0720  09F8               	comf	___awdiv@quotient+1,f
  1284     0721  0AF7               	incf	___awdiv@quotient,f
  1285     0722  1903               	skipnz
  1286     0723  0AF8               	incf	___awdiv@quotient+1,f
  1287     0724                     l903:
  1288     0724  0878               	movf	___awdiv@quotient+1,w
  1289     0725  00F1               	movwf	?___awdiv+1
  1290     0726  0877               	movf	___awdiv@quotient,w
  1291     0727  00F0               	movwf	?___awdiv
  1292     0728                     l294:
  1293     0728  0008               	return
  1294     0729                     __end_of___awdiv:
  1295     007E                     btemp	set	126	;btemp
  1296     007E                     wtemp0	set	126
  1297                           
  1298                           	psect	config
  1299                           
  1300                           ;Config register CONFIG1 @ 0x8007
  1301                           ;	Oscillator Selection
  1302                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1303                           ;	Watchdog Timer Enable
  1304                           ;	WDTE = OFF, WDT disabled
  1305                           ;	Power-up Timer Enable
  1306                           ;	PWRTE = ON, PWRT enabled
  1307                           ;	MCLR Pin Function Select
  1308                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1309                           ;	Flash Program Memory Code Protection
  1310                           ;	CP = OFF, Program memory code protection is disabled
  1311                           ;	Brown-out Reset Enable
  1312                           ;	BOREN = OFF, Brown-out Reset disabled
  1313                           ;	Clock Out Enable
  1314                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1315                           ;	Internal/External Switchover
  1316                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1317                           ;	Fail-Safe Clock Monitor Enable
  1318                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1319     8007                     	org	32775
  1320     8007  39C4               	dw	14788
  1321                           
  1322                           ;Config register CONFIG2 @ 0x8008
  1323                           ;	Flash Memory Self-Write Protection
  1324                           ;	WRT = OFF, Write protection off
  1325                           ;	Voltage Regulator Capacitor Enable bit
  1326                           ;	VCAPEN = OFF, VCAP pin function disabled
  1327                           ;	Stack Overflow/Underflow Reset Enable
  1328                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1329                           ;	Brown-out Reset Voltage Selection
  1330                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1331                           ;	Low-Power Brown Out Reset
  1332                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1333                           ;	Low-Voltage Programming Enable
  1334                           ;	LVP = ON, Low-voltage programming enabled
  1335     8008                     	org	32776
  1336     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       8
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_multiplex
    _multiplex->___awdiv

Critical Paths under _main in BANK0

    _main->_multiplex

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1868
                                             12 COMMON     2     2      0
                          _multiplex
 ---------------------------------------------------------------------------------
 (1) _multiplex                                            7     5      2    1868
                                              9 COMMON     3     1      2
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                           _disp7seg
 ---------------------------------------------------------------------------------
 (2) _disp7seg                                             8     6      2     802
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _multiplex
     ___awdiv
     ___awmod
     _disp7seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       8       5       10.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      16      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      16      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 07 11:34:16 2024

                      _i 0024                       l60 062B                       l57 07F9  
           ___awdiv@sign 0076                      l307 06C9                      l294 0728  
                    l801 0740                      l811 075C                      l803 0746  
                    l901 071F                      l821 0783                      l813 0768  
                    l805 074E                      l903 0724                      l911 067C  
                    l831 079F                      l815 076E                      l823 0785  
                    l807 0755                      l921 0692                      l913 0681  
                    l841 07BB                      l833 07A6                      l825 078A  
                    l817 0775                      l809 0757                      l931 06AC  
                    l923 0695                      l915 0683                      l907 0677  
                    l843 07C2                      l851 07D9                      l835 07AD  
                    l827 0791                      l819 077C                      l941 06C5  
                    l933 06B0                      l925 069A                      l917 0687  
                    l909 0678                      l861 07F4                      l853 07DE  
                    l845 07C9                      l837 07B4                      l829 0798  
                    l871 06D6                      l863 06CA                      l935 06B5  
                    l927 069E                      l919 068C                      l855 07E5  
                    l847 07D0                      l839 07B6                      l791 0729  
                    l951 0617                      l881 06EB                      l873 06DA  
                    l865 06CB                      l929 06A2                      l937 06BB  
                    l857 07EB                      l849 07D7                      l793 072A  
                    l953 0619                      l945 05E7                      l961 062F  
                    l891 070A                      l883 06EE                      l875 06DF  
                    l867 06CF                      l939 06C0                      l859 07F2  
                    l795 0730                      l955 0620                      l947 060E  
                    l971 0645                      l963 0630                      l893 070E  
                    l885 06F3                      l877 06E3                      l869 06D4  
                    l797 0737                      l957 0629                      l949 0610  
                    l981 066E                      l973 064C                      l965 0637  
                    l895 070F                      l887 06F7                      l879 06E5  
                    l799 073E                      l975 0658                      l967 063A  
                    l959 062C                      l897 0714                      l889 06FB  
                    l969 063E                      l977 065C                      l899 071A  
                    l979 0669                      _RB0 0068                      _RD0 0078  
                    _RD1 0079                      _RD2 007A                      _RE0 0080  
                    _RD3 007B                      _RE1 0081                      _RD4 007C  
                    _RD5 007D                      _RD6 007E                      u500 074E  
                    u501 074D                      u510 0755                      u511 0754  
                    u600 079F                      u520 0765                      u601 079E  
                    u521 0762                      u610 07A6                      u611 07A5  
                    u700 07F2                      u620 07AD                      u540 076E  
                    u701 07F1                      u621 07AC                      u541 076D  
                    u710 06CF                      u630 07B4                      u550 0775  
                    u534 0767                      u470 0730                      u711 06CE  
                    u631 07B3                      u551 0774                      u471 072F  
                    u800 071F                      u720 06DA                      u640 07C2  
                    u560 077C                      u480 0737                      u801 071E  
                    u721 06D9                      u641 07C1                      u561 077B  
                    u481 0736                      u730 06EB                      u810 067C  
                    u650 07C9                      u570 0783                      u490 073E  
                    u731 06EA                      u811 067B                      u651 07C8  
                    u571 0782                      u491 073D                      u820 0687  
                    u660 07D0                      u580 0791                      u900 0669  
                    u821 0686                      u661 07CF                      u581 0790  
                    u901 0668                      u750 06FB                      u830 0692  
                    u670 07D7                      u590 0798                      u910 066E  
                    u751 06FA                      u831 0691                      u671 07D6  
                    u591 0797                      u911 066D                      u680 07E5  
                    u920 0674                      u745 06EF                      u681 07E4  
                    u921 0673                      u905 0665                      u770 070A  
                    u850 06A2                      u690 07EB                      u771 0709  
                    u851 06A1                      u691 07EA                      u860 06AC  
                    u765 06FC                      u861 06AB                      u845 0696  
                    u790 071A                      u791 0719                      u775 0706  
                    u880 06BB                      u785 0710                      u881 06BA  
                    u865 06A8                      u937 0648                      u890 06C0  
                    u891 06BF                      u875 06B1                      u947 0613  
                    u957 0625             ___awmod@sign 0076                      wreg 0009  
                   _main 062C                     btemp 007E                     start 0002  
                  ?_main 0070          __end_of___awdiv 0729          __end_of___awmod 06CA  
        ___awdiv@divisor 0070          ___awdiv@counter 0075                    _PORTD 000F  
                  _TRISB 008D                    _TRISD 008F                    _TRISE 0090  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 0677                   ??_main 007C         ___awdiv@dividend 0072  
                 _ANSELB 018D                   _ANSELD 018F                   _ANSELE 0190  
                 _OSCCON 0099                   _BT_ant 0026         __end_of_disp7seg 07FA  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075  __end_of__initialization 07FD  
         __pcstackCOMMON 0070               __pbssBANK0 0026               __pmaintext 062C  
              ?_disp7seg 0070                  ___awdiv 06CA                  ___awmod 0677  
                __ptext1 05E7                  __ptext2 0729                  __ptext3 0677  
                __ptext4 06CA         ___awmod@dividend 0072          multiplex@decena 0020  
             ??_disp7seg 0072          multiplex@unidad 0022     end_of_initialization 07FD  
      __end_of_multiplex 062C      start_initialization 07FA                ___latbits 0003  
          __pcstackBANK0 0020                __pnvBANK0 0024                 ?___awdiv 0070  
               ?___awmod 0070              _disp7seg$50 0072              _disp7seg$51 0073  
            _disp7seg$52 0074              _disp7seg$53 0075              _disp7seg$54 0076  
            _disp7seg$55 0077                disp7seg@n 0070                _multiplex 05E7  
             multiplex@n 0079               ?_multiplex 0079                 _disp7seg 0729  
            ??_multiplex 007B  
