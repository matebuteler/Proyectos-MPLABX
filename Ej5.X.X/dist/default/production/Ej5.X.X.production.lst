

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 07 13:14:01 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1519
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 07/09/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1519 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     008C                     	;# 
    79     008D                     	;# 
    80     008E                     	;# 
    81     008F                     	;# 
    82     0090                     	;# 
    83     0091                     	;# 
    84     0092                     	;# 
    85     0095                     	;# 
    86     0096                     	;# 
    87     0097                     	;# 
    88     0099                     	;# 
    89     009A                     	;# 
    90     009B                     	;# 
    91     009B                     	;# 
    92     009C                     	;# 
    93     009D                     	;# 
    94     009E                     	;# 
    95     010C                     	;# 
    96     010D                     	;# 
    97     010E                     	;# 
    98     010F                     	;# 
    99     0110                     	;# 
   100     0116                     	;# 
   101     0117                     	;# 
   102     011D                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     018E                     	;# 
   106     018F                     	;# 
   107     0190                     	;# 
   108     0191                     	;# 
   109     0191                     	;# 
   110     0192                     	;# 
   111     0193                     	;# 
   112     0193                     	;# 
   113     0194                     	;# 
   114     0195                     	;# 
   115     0196                     	;# 
   116     0197                     	;# 
   117     0199                     	;# 
   118     019A                     	;# 
   119     019B                     	;# 
   120     019B                     	;# 
   121     019B                     	;# 
   122     019B                     	;# 
   123     019C                     	;# 
   124     019C                     	;# 
   125     019D                     	;# 
   126     019E                     	;# 
   127     019F                     	;# 
   128     020D                     	;# 
   129     0210                     	;# 
   130     0211                     	;# 
   131     0211                     	;# 
   132     0212                     	;# 
   133     0212                     	;# 
   134     0213                     	;# 
   135     0213                     	;# 
   136     0214                     	;# 
   137     0214                     	;# 
   138     0215                     	;# 
   139     0215                     	;# 
   140     0215                     	;# 
   141     0216                     	;# 
   142     0216                     	;# 
   143     0217                     	;# 
   144     0217                     	;# 
   145     0291                     	;# 
   146     0291                     	;# 
   147     0292                     	;# 
   148     0293                     	;# 
   149     0298                     	;# 
   150     0298                     	;# 
   151     0299                     	;# 
   152     029A                     	;# 
   153     0394                     	;# 
   154     0395                     	;# 
   155     0396                     	;# 
   156     0FE4                     	;# 
   157     0FE5                     	;# 
   158     0FE6                     	;# 
   159     0FE7                     	;# 
   160     0FE8                     	;# 
   161     0FE9                     	;# 
   162     0FEA                     	;# 
   163     0FEB                     	;# 
   164     0FED                     	;# 
   165     0FEE                     	;# 
   166     0FEF                     	;# 
   167     000F                     _PORTD	set	15
   168     0068                     _RB0	set	104
   169     0080                     _RE0	set	128
   170     0081                     _RE1	set	129
   171     007E                     _RD6	set	126
   172     007D                     _RD5	set	125
   173     007C                     _RD4	set	124
   174     007B                     _RD3	set	123
   175     007A                     _RD2	set	122
   176     0079                     _RD1	set	121
   177     0078                     _RD0	set	120
   178     0090                     _TRISE	set	144
   179     008D                     _TRISB	set	141
   180     008F                     _TRISD	set	143
   181     0099                     _OSCCON	set	153
   182     0190                     _ANSELE	set	400
   183     018D                     _ANSELB	set	397
   184     018F                     _ANSELD	set	399
   185                           
   186                           	psect	cinit
   187     07F8                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07F8                     __initialization:
   191                           
   192                           ; Clear objects allocated to BANK0
   193     07F8  0020               	movlb	0	; select bank0
   194     07F9  01A0               	clrf	__pbssBANK0& (0+127)
   195     07FA  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   196     07FB  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   197     07FC  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   198     07FD                     end_of_initialization:	
   199                           ;End of C runtime variable initialization code
   200                           
   201     07FD                     __end_of__initialization:
   202     07FD  0020               	movlb	0
   203     07FE  3185  2DEC         	ljmp	_main	;jump to C main() function
   204                           
   205                           	psect	bssBANK0
   206     0020                     __pbssBANK0:
   207     0020                     _i:
   208     0020                     	ds	2
   209     0022                     _BT_ant:
   210     0022                     	ds	2
   211                           
   212                           	psect	cstackCOMMON
   213     0070                     __pcstackCOMMON:
   214     0070                     ?_disp7seg:
   215     0070                     ?_main:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ?___awdiv:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0070                     ?___awmod:	
   222                           ; 2 bytes @ 0x0
   223                           
   224     0070                     disp7seg@n:	
   225                           ; 2 bytes @ 0x0
   226                           
   227     0070                     ___awdiv@divisor:	
   228                           ; 2 bytes @ 0x0
   229                           
   230     0070                     ___awmod@divisor:	
   231                           ; 2 bytes @ 0x0
   232                           
   233                           
   234                           ; 2 bytes @ 0x0
   235     0070                     	ds	2
   236     0072                     ??_disp7seg:
   237     0072                     _disp7seg$50:	
   238                           ; 1 bytes @ 0x2
   239                           
   240     0072                     ___awdiv@dividend:	
   241                           ; 1 bytes @ 0x2
   242                           
   243     0072                     ___awmod@dividend:	
   244                           ; 2 bytes @ 0x2
   245                           
   246                           
   247                           ; 2 bytes @ 0x2
   248     0072                     	ds	1
   249     0073                     _disp7seg$51:
   250                           
   251                           ; 1 bytes @ 0x3
   252     0073                     	ds	1
   253     0074                     ??___awdiv:
   254     0074                     ??___awmod:	
   255                           ; 1 bytes @ 0x4
   256                           
   257     0074                     _disp7seg$52:	
   258                           ; 1 bytes @ 0x4
   259                           
   260                           
   261                           ; 1 bytes @ 0x4
   262     0074                     	ds	1
   263     0075                     _disp7seg$53:
   264     0075                     ___awdiv@counter:	
   265                           ; 1 bytes @ 0x5
   266                           
   267     0075                     ___awmod@counter:	
   268                           ; 1 bytes @ 0x5
   269                           
   270                           
   271                           ; 1 bytes @ 0x5
   272     0075                     	ds	1
   273     0076                     _disp7seg$54:
   274     0076                     ___awdiv@sign:	
   275                           ; 1 bytes @ 0x6
   276                           
   277     0076                     ___awmod@sign:	
   278                           ; 1 bytes @ 0x6
   279                           
   280                           
   281                           ; 1 bytes @ 0x6
   282     0076                     	ds	1
   283     0077                     _disp7seg$55:
   284     0077                     ___awdiv@quotient:	
   285                           ; 1 bytes @ 0x7
   286                           
   287                           
   288                           ; 2 bytes @ 0x7
   289     0077                     	ds	2
   290     0079                     ?_multiplex:
   291     0079                     multiplex@n:	
   292                           ; 1 bytes @ 0x9
   293                           
   294                           
   295                           ; 2 bytes @ 0x9
   296     0079                     	ds	2
   297     007B                     ??_multiplex:
   298                           
   299                           ; 1 bytes @ 0xB
   300     007B                     	ds	1
   301     007C                     ??_main:
   302                           
   303                           ; 1 bytes @ 0xC
   304     007C                     	ds	2
   305                           
   306                           	psect	cstackBANK0
   307     0024                     __pcstackBANK0:
   308     0024                     multiplex@decena:
   309                           
   310                           ; 2 bytes @ 0x0
   311     0024                     	ds	2
   312     0026                     multiplex@unidad:
   313                           
   314                           ; 2 bytes @ 0x2
   315     0026                     	ds	2
   316                           
   317                           	psect	maintext
   318     05EC                     __pmaintext:	
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 47 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, pclath, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : B1F/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   342 ;;Total ram usage:        2 bytes
   343 ;; Hardware stack levels required when called: 2
   344 ;; This function calls:
   345 ;;		_multiplex
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351     05EC                     _main:	
   352                           ;psect for function _main
   353                           
   354     05EC                     l956:	
   355                           ;incstack = 0
   356                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   357                           
   358                           
   359                           ;main.c: 48:     OSCCON = 0x6A;
   360     05EC  306A               	movlw	106
   361     05ED  0021               	movlb	1	; select bank1
   362     05EE  0099               	movwf	25	;volatile
   363     05EF                     l958:
   364                           
   365                           ;main.c: 49:     TRISD = 0x00;
   366     05EF  018F               	clrf	15	;volatile
   367     05F0                     l960:
   368                           
   369                           ;main.c: 50:     TRISB = 0xFF;
   370     05F0  30FF               	movlw	255
   371     05F1  008D               	movwf	13	;volatile
   372                           
   373                           ;main.c: 51:     TRISE = 0x00;
   374     05F2  0190               	clrf	16	;volatile
   375                           
   376                           ;main.c: 52:     ANSELD = 0x00;
   377     05F3  0023               	movlb	3	; select bank3
   378     05F4  018F               	clrf	15	;volatile
   379                           
   380                           ;main.c: 53:     ANSELB = 0x00;
   381     05F5  018D               	clrf	13	;volatile
   382                           
   383                           ;main.c: 54:     ANSELE = 0x00;
   384     05F6  0190               	clrf	16	;volatile
   385     05F7                     l962:
   386                           
   387                           ;main.c: 55:     PORTD = 0xFF;
   388     05F7  30FF               	movlw	255
   389     05F8  0020               	movlb	0	; select bank0
   390     05F9  008F               	movwf	15	;volatile
   391     05FA                     l964:
   392                           
   393                           ;main.c: 57:         multiplex(i);
   394     05FA  0821               	movf	_i+1,w
   395     05FB  00FA               	movwf	multiplex@n+1
   396     05FC  0820               	movf	_i,w
   397     05FD  00F9               	movwf	multiplex@n
   398     05FE  3186  2630  3185   	fcall	_multiplex
   399     0601                     l966:
   400                           
   401                           ;main.c: 58:         if (RB0 && !BT_ant) {
   402     0601  0020               	movlb	0	; select bank0
   403     0602  1C0D               	btfss	13,0	;volatile
   404     0603  2E05               	goto	u901
   405     0604  2E06               	goto	u900
   406     0605                     u901:
   407     0605  2E21               	goto	l978
   408     0606                     u900:
   409     0606                     l968:
   410     0606  0822               	movf	_BT_ant,w
   411     0607  0423               	iorwf	_BT_ant+1,w
   412     0608  1D03               	btfss	3,2
   413     0609  2E0B               	goto	u911
   414     060A  2E0C               	goto	u910
   415     060B                     u911:
   416     060B  2E21               	goto	l978
   417     060C                     u910:
   418     060C                     l970:
   419                           
   420                           ;main.c: 59:             i++;
   421     060C  3001               	movlw	1
   422     060D  07A0               	addwf	_i,f
   423     060E  3000               	movlw	0
   424     060F  3DA1               	addwfc	_i+1,f
   425     0610                     l972:
   426                           
   427                           ;main.c: 60:             if (i==100) i = 0;
   428     0610  3064               	movlw	100
   429     0611  0620               	xorwf	_i,w
   430     0612  0421               	iorwf	_i+1,w
   431     0613  1D03               	btfss	3,2
   432     0614  2E16               	goto	u921
   433     0615  2E17               	goto	u920
   434     0616                     u921:
   435     0616  2E19               	goto	l976
   436     0617                     u920:
   437     0617                     l974:
   438     0617  01A0               	clrf	_i
   439     0618  01A1               	clrf	_i+1
   440     0619                     l976:
   441                           
   442                           ;main.c: 61:             _delay((unsigned long)((50)*(4000000/4000.0)));
   443     0619  3041               	movlw	65
   444     061A  00FC               	movwf	??_main
   445     061B  30EE               	movlw	238
   446     061C                     u937:
   447     061C  0B89               	decfsz	9,f
   448     061D  2E1C               	goto	u937
   449     061E  0BFC               	decfsz	??_main,f
   450     061F  2E1C               	goto	u937
   451     0620  3200               	nop2
   452     0621                     l978:
   453                           
   454                           ;main.c: 63:         BT_ant = RB0;
   455     0621  1003               	clrc
   456     0622  0020               	movlb	0	; select bank0
   457     0623  180D               	btfsc	13,0	;volatile
   458     0624  1403               	setc
   459     0625  3000               	movlw	0
   460     0626  3D09               	addwfc	9,w
   461     0627  00FC               	movwf	??_main
   462     0628  01FD               	clrf	??_main+1
   463     0629  087C               	movf	??_main,w
   464     062A  00A2               	movwf	_BT_ant
   465     062B  087D               	movf	??_main+1,w
   466     062C  00A3               	movwf	_BT_ant+1
   467     062D  2DFA               	goto	l964
   468     062E  3180  2802         	ljmp	start
   469     0630                     __end_of_main:
   470                           
   471                           	psect	text1
   472     0630                     __ptext1:	
   473 ;; *************** function _multiplex *****************
   474 ;; Defined at:
   475 ;;		line 34 in file "main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  n               2    9[COMMON] int 
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  unidad          2    2[BANK0 ] int 
   480 ;;  decena          2    0[BANK0 ] int 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   491 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   492 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   493 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   494 ;;Total ram usage:        7 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; Hardware stack levels required when called: 1
   497 ;; This function calls:
   498 ;;		___awdiv
   499 ;;		___awmod
   500 ;;		_disp7seg
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506     0630                     _multiplex:	
   507                           ;psect for function _multiplex
   508                           
   509     0630                     l942:	
   510                           ;incstack = 0
   511                           ; Regs used in _multiplex: [wreg+status,2+status,0+pclath+cstack]
   512                           
   513                           
   514                           ;main.c: 35:     int decena = n/10;
   515     0630  300A               	movlw	10
   516     0631  00F0               	movwf	___awdiv@divisor
   517     0632  3000               	movlw	0
   518     0633  00F1               	movwf	___awdiv@divisor+1
   519     0634  087A               	movf	multiplex@n+1,w
   520     0635  00F3               	movwf	___awdiv@dividend+1
   521     0636  0879               	movf	multiplex@n,w
   522     0637  00F2               	movwf	___awdiv@dividend
   523     0638  3186  26C8  3186   	fcall	___awdiv
   524     063B  0871               	movf	?___awdiv+1,w
   525     063C  0020               	movlb	0	; select bank0
   526     063D  00A5               	movwf	multiplex@decena+1
   527     063E  0870               	movf	?___awdiv,w
   528     063F  00A4               	movwf	multiplex@decena
   529                           
   530                           ;main.c: 36:     int unidad = n%10;
   531     0640  300A               	movlw	10
   532     0641  00F0               	movwf	___awmod@divisor
   533     0642  3000               	movlw	0
   534     0643  00F1               	movwf	___awmod@divisor+1
   535     0644  087A               	movf	multiplex@n+1,w
   536     0645  00F3               	movwf	___awmod@dividend+1
   537     0646  0879               	movf	multiplex@n,w
   538     0647  00F2               	movwf	___awmod@dividend
   539     0648  3186  2675  3186   	fcall	___awmod
   540     064B  0871               	movf	?___awmod+1,w
   541     064C  0020               	movlb	0	; select bank0
   542     064D  00A7               	movwf	multiplex@unidad+1
   543     064E  0870               	movf	?___awmod,w
   544     064F  00A6               	movwf	multiplex@unidad
   545                           
   546                           ;main.c: 37:     disp7seg(unidad);
   547     0650  0827               	movf	multiplex@unidad+1,w
   548     0651  00F1               	movwf	disp7seg@n+1
   549     0652  0826               	movf	multiplex@unidad,w
   550     0653  00F0               	movwf	disp7seg@n
   551     0654  3187  2727  3186   	fcall	_disp7seg
   552     0657                     l944:
   553                           
   554                           ;main.c: 38:     RE1 = 1;
   555     0657  0020               	movlb	0	; select bank0
   556     0658  1490               	bsf	16,1	;volatile
   557     0659                     l946:
   558                           
   559                           ;main.c: 39:     _delay((unsigned long)((10)*(4000000/4000.0)));
   560     0659  300D               	movlw	13
   561     065A  00FB               	movwf	??_multiplex
   562     065B  30FC               	movlw	252
   563     065C                     u947:
   564     065C  0B89               	decfsz	9,f
   565     065D  2E5C               	goto	u947
   566     065E  0BFB               	decfsz	??_multiplex,f
   567     065F  2E5C               	goto	u947
   568     0660                     l948:
   569                           
   570                           ;main.c: 40:     RE1 = 0;
   571     0660  0020               	movlb	0	; select bank0
   572     0661  1090               	bcf	16,1	;volatile
   573     0662                     l950:
   574                           
   575                           ;main.c: 41:     disp7seg(decena);
   576     0662  0825               	movf	multiplex@decena+1,w
   577     0663  00F1               	movwf	disp7seg@n+1
   578     0664  0824               	movf	multiplex@decena,w
   579     0665  00F0               	movwf	disp7seg@n
   580     0666  3187  2727  3186   	fcall	_disp7seg
   581     0669                     l952:
   582                           
   583                           ;main.c: 42:     RE0 = 1;
   584     0669  0020               	movlb	0	; select bank0
   585     066A  1410               	bsf	16,0	;volatile
   586                           
   587                           ;main.c: 43:     _delay((unsigned long)((10)*(4000000/4000.0)));
   588     066B  300D               	movlw	13
   589     066C  00FB               	movwf	??_multiplex
   590     066D  30FC               	movlw	252
   591     066E                     u957:
   592     066E  0B89               	decfsz	9,f
   593     066F  2E6E               	goto	u957
   594     0670  0BFB               	decfsz	??_multiplex,f
   595     0671  2E6E               	goto	u957
   596     0672                     l954:
   597                           
   598                           ;main.c: 44:     RE0 = 0;
   599     0672  0020               	movlb	0	; select bank0
   600     0673  1010               	bcf	16,0	;volatile
   601     0674                     l60:
   602     0674  0008               	return
   603     0675                     __end_of_multiplex:
   604                           
   605                           	psect	text2
   606     0727                     __ptext2:	
   607 ;; *************** function _disp7seg *****************
   608 ;; Defined at:
   609 ;;		line 24 in file "main.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  n               2    0[COMMON] int 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   624 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   626 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   627 ;;Total ram usage:        8 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_multiplex
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636     0727                     _disp7seg:	
   637                           ;psect for function _disp7seg
   638                           
   639     0727                     l788:	
   640                           ;incstack = 0
   641                           ; Regs used in _disp7seg: [wreg+status,2+status,0]
   642                           
   643                           
   644                           ;main.c: 25:     RD0 = (n != 1 && n != 6 && n != 4);
   645     0727  01F2               	clrf	_disp7seg$50
   646     0728                     l790:
   647     0728  0370               	decf	disp7seg@n,w
   648     0729  0471               	iorwf	disp7seg@n+1,w
   649     072A  1903               	btfsc	3,2
   650     072B  2F2D               	goto	u471
   651     072C  2F2E               	goto	u470
   652     072D                     u471:
   653     072D  2F3E               	goto	l798
   654     072E                     u470:
   655     072E                     l792:
   656     072E  3006               	movlw	6
   657     072F  0670               	xorwf	disp7seg@n,w
   658     0730  0471               	iorwf	disp7seg@n+1,w
   659     0731  1903               	btfsc	3,2
   660     0732  2F34               	goto	u481
   661     0733  2F35               	goto	u480
   662     0734                     u481:
   663     0734  2F3E               	goto	l798
   664     0735                     u480:
   665     0735                     l794:
   666     0735  3004               	movlw	4
   667     0736  0670               	xorwf	disp7seg@n,w
   668     0737  0471               	iorwf	disp7seg@n+1,w
   669     0738  1903               	btfsc	3,2
   670     0739  2F3B               	goto	u491
   671     073A  2F3C               	goto	u490
   672     073B                     u491:
   673     073B  2F3E               	goto	l798
   674     073C                     u490:
   675     073C                     l796:
   676     073C  01F2               	clrf	_disp7seg$50
   677     073D  0AF2               	incf	_disp7seg$50,f
   678     073E                     l798:
   679     073E  0C72               	rrf	_disp7seg$50,w
   680     073F  0020               	movlb	0	; select bank0
   681     0740  1C03               	skipc
   682     0741  100F               	bcf	15,0	;volatile
   683     0742  1803               	skipnc
   684     0743  140F               	bsf	15,0	;volatile
   685     0744                     l800:
   686                           
   687                           ;main.c: 26:     RD1 = (n != 5 && n != 6);
   688     0744  01F3               	clrf	_disp7seg$51
   689     0745  3005               	movlw	5
   690     0746  0670               	xorwf	disp7seg@n,w
   691     0747  0471               	iorwf	disp7seg@n+1,w
   692     0748  1903               	btfsc	3,2
   693     0749  2F4B               	goto	u501
   694     074A  2F4C               	goto	u500
   695     074B                     u501:
   696     074B  2F55               	goto	l806
   697     074C                     u500:
   698     074C                     l802:
   699     074C  3006               	movlw	6
   700     074D  0670               	xorwf	disp7seg@n,w
   701     074E  0471               	iorwf	disp7seg@n+1,w
   702     074F  1903               	btfsc	3,2
   703     0750  2F52               	goto	u511
   704     0751  2F53               	goto	u510
   705     0752                     u511:
   706     0752  2F55               	goto	l806
   707     0753                     u510:
   708     0753                     l804:
   709     0753  01F3               	clrf	_disp7seg$51
   710     0754  0AF3               	incf	_disp7seg$51,f
   711     0755                     l806:
   712     0755  0C73               	rrf	_disp7seg$51,w
   713     0756  1C03               	skipc
   714     0757  108F               	bcf	15,1	;volatile
   715     0758  1803               	skipnc
   716     0759  148F               	bsf	15,1	;volatile
   717     075A                     l808:
   718                           
   719                           ;main.c: 27:     RD2 = (n != 2);
   720     075A  3002               	movlw	2
   721     075B  0670               	xorwf	disp7seg@n,w
   722     075C  0471               	iorwf	disp7seg@n+1,w
   723     075D  1D03               	btfss	3,2
   724     075E  2F60               	goto	u521
   725     075F  2F63               	goto	u520
   726     0760                     u521:
   727     0760  0020               	movlb	0	; select bank0
   728     0761  150F               	bsf	15,2	;volatile
   729     0762  2F65               	goto	u534
   730     0763                     u520:
   731     0763  0020               	movlb	0	; select bank0
   732     0764  110F               	bcf	15,2	;volatile
   733     0765                     u534:
   734                           
   735                           ;main.c: 28:     RD3 = (n != 1 && n != 4 && n != 7 && n != 9);
   736     0765  01F4               	clrf	_disp7seg$52
   737     0766                     l810:
   738     0766  0370               	decf	disp7seg@n,w
   739     0767  0471               	iorwf	disp7seg@n+1,w
   740     0768  1903               	btfsc	3,2
   741     0769  2F6B               	goto	u541
   742     076A  2F6C               	goto	u540
   743     076B                     u541:
   744     076B  2F83               	goto	l820
   745     076C                     u540:
   746     076C                     l812:
   747     076C  3004               	movlw	4
   748     076D  0670               	xorwf	disp7seg@n,w
   749     076E  0471               	iorwf	disp7seg@n+1,w
   750     076F  1903               	btfsc	3,2
   751     0770  2F72               	goto	u551
   752     0771  2F73               	goto	u550
   753     0772                     u551:
   754     0772  2F83               	goto	l820
   755     0773                     u550:
   756     0773                     l814:
   757     0773  3007               	movlw	7
   758     0774  0670               	xorwf	disp7seg@n,w
   759     0775  0471               	iorwf	disp7seg@n+1,w
   760     0776  1903               	btfsc	3,2
   761     0777  2F79               	goto	u561
   762     0778  2F7A               	goto	u560
   763     0779                     u561:
   764     0779  2F83               	goto	l820
   765     077A                     u560:
   766     077A                     l816:
   767     077A  3009               	movlw	9
   768     077B  0670               	xorwf	disp7seg@n,w
   769     077C  0471               	iorwf	disp7seg@n+1,w
   770     077D  1903               	btfsc	3,2
   771     077E  2F80               	goto	u571
   772     077F  2F81               	goto	u570
   773     0780                     u571:
   774     0780  2F83               	goto	l820
   775     0781                     u570:
   776     0781                     l818:
   777     0781  01F4               	clrf	_disp7seg$52
   778     0782  0AF4               	incf	_disp7seg$52,f
   779     0783                     l820:
   780     0783  0C74               	rrf	_disp7seg$52,w
   781     0784  1C03               	skipc
   782     0785  118F               	bcf	15,3	;volatile
   783     0786  1803               	skipnc
   784     0787  158F               	bsf	15,3	;volatile
   785     0788                     l822:
   786                           
   787                           ;main.c: 29:     RD4 = (n != 1 && n != 3 && n != 4 && n != 5 && n != 7 && n != 9);
   788     0788  01F5               	clrf	_disp7seg$53
   789     0789  0370               	decf	disp7seg@n,w
   790     078A  0471               	iorwf	disp7seg@n+1,w
   791     078B  1903               	btfsc	3,2
   792     078C  2F8E               	goto	u581
   793     078D  2F8F               	goto	u580
   794     078E                     u581:
   795     078E  2FB4               	goto	l836
   796     078F                     u580:
   797     078F                     l824:
   798     078F  3003               	movlw	3
   799     0790  0670               	xorwf	disp7seg@n,w
   800     0791  0471               	iorwf	disp7seg@n+1,w
   801     0792  1903               	btfsc	3,2
   802     0793  2F95               	goto	u591
   803     0794  2F96               	goto	u590
   804     0795                     u591:
   805     0795  2FB4               	goto	l836
   806     0796                     u590:
   807     0796                     l826:
   808     0796  3004               	movlw	4
   809     0797  0670               	xorwf	disp7seg@n,w
   810     0798  0471               	iorwf	disp7seg@n+1,w
   811     0799  1903               	btfsc	3,2
   812     079A  2F9C               	goto	u601
   813     079B  2F9D               	goto	u600
   814     079C                     u601:
   815     079C  2FB4               	goto	l836
   816     079D                     u600:
   817     079D                     l828:
   818     079D  3005               	movlw	5
   819     079E  0670               	xorwf	disp7seg@n,w
   820     079F  0471               	iorwf	disp7seg@n+1,w
   821     07A0  1903               	btfsc	3,2
   822     07A1  2FA3               	goto	u611
   823     07A2  2FA4               	goto	u610
   824     07A3                     u611:
   825     07A3  2FB4               	goto	l836
   826     07A4                     u610:
   827     07A4                     l830:
   828     07A4  3007               	movlw	7
   829     07A5  0670               	xorwf	disp7seg@n,w
   830     07A6  0471               	iorwf	disp7seg@n+1,w
   831     07A7  1903               	btfsc	3,2
   832     07A8  2FAA               	goto	u621
   833     07A9  2FAB               	goto	u620
   834     07AA                     u621:
   835     07AA  2FB4               	goto	l836
   836     07AB                     u620:
   837     07AB                     l832:
   838     07AB  3009               	movlw	9
   839     07AC  0670               	xorwf	disp7seg@n,w
   840     07AD  0471               	iorwf	disp7seg@n+1,w
   841     07AE  1903               	btfsc	3,2
   842     07AF  2FB1               	goto	u631
   843     07B0  2FB2               	goto	u630
   844     07B1                     u631:
   845     07B1  2FB4               	goto	l836
   846     07B2                     u630:
   847     07B2                     l834:
   848     07B2  01F5               	clrf	_disp7seg$53
   849     07B3  0AF5               	incf	_disp7seg$53,f
   850     07B4                     l836:
   851     07B4  0C75               	rrf	_disp7seg$53,w
   852     07B5  1C03               	skipc
   853     07B6  120F               	bcf	15,4	;volatile
   854     07B7  1803               	skipnc
   855     07B8  160F               	bsf	15,4	;volatile
   856     07B9                     l838:
   857                           
   858                           ;main.c: 30:     RD5 = (n != 1 && n != 2 && n != 3 && n != 7);
   859     07B9  01F6               	clrf	_disp7seg$54
   860     07BA  0370               	decf	disp7seg@n,w
   861     07BB  0471               	iorwf	disp7seg@n+1,w
   862     07BC  1903               	btfsc	3,2
   863     07BD  2FBF               	goto	u641
   864     07BE  2FC0               	goto	u640
   865     07BF                     u641:
   866     07BF  2FD7               	goto	l848
   867     07C0                     u640:
   868     07C0                     l840:
   869     07C0  3002               	movlw	2
   870     07C1  0670               	xorwf	disp7seg@n,w
   871     07C2  0471               	iorwf	disp7seg@n+1,w
   872     07C3  1903               	btfsc	3,2
   873     07C4  2FC6               	goto	u651
   874     07C5  2FC7               	goto	u650
   875     07C6                     u651:
   876     07C6  2FD7               	goto	l848
   877     07C7                     u650:
   878     07C7                     l842:
   879     07C7  3003               	movlw	3
   880     07C8  0670               	xorwf	disp7seg@n,w
   881     07C9  0471               	iorwf	disp7seg@n+1,w
   882     07CA  1903               	btfsc	3,2
   883     07CB  2FCD               	goto	u661
   884     07CC  2FCE               	goto	u660
   885     07CD                     u661:
   886     07CD  2FD7               	goto	l848
   887     07CE                     u660:
   888     07CE                     l844:
   889     07CE  3007               	movlw	7
   890     07CF  0670               	xorwf	disp7seg@n,w
   891     07D0  0471               	iorwf	disp7seg@n+1,w
   892     07D1  1903               	btfsc	3,2
   893     07D2  2FD4               	goto	u671
   894     07D3  2FD5               	goto	u670
   895     07D4                     u671:
   896     07D4  2FD7               	goto	l848
   897     07D5                     u670:
   898     07D5                     l846:
   899     07D5  01F6               	clrf	_disp7seg$54
   900     07D6  0AF6               	incf	_disp7seg$54,f
   901     07D7                     l848:
   902     07D7  0C76               	rrf	_disp7seg$54,w
   903     07D8  1C03               	skipc
   904     07D9  128F               	bcf	15,5	;volatile
   905     07DA  1803               	skipnc
   906     07DB  168F               	bsf	15,5	;volatile
   907     07DC                     l850:
   908                           
   909                           ;main.c: 31:     RD6 = (n != 0 && n != 1 && n != 7);
   910     07DC  01F7               	clrf	_disp7seg$55
   911     07DD  0870               	movf	disp7seg@n,w
   912     07DE  0471               	iorwf	disp7seg@n+1,w
   913     07DF  1903               	btfsc	3,2
   914     07E0  2FE2               	goto	u681
   915     07E1  2FE3               	goto	u680
   916     07E2                     u681:
   917     07E2  2FF2               	goto	l858
   918     07E3                     u680:
   919     07E3                     l852:
   920     07E3  0370               	decf	disp7seg@n,w
   921     07E4  0471               	iorwf	disp7seg@n+1,w
   922     07E5  1903               	btfsc	3,2
   923     07E6  2FE8               	goto	u691
   924     07E7  2FE9               	goto	u690
   925     07E8                     u691:
   926     07E8  2FF2               	goto	l858
   927     07E9                     u690:
   928     07E9                     l854:
   929     07E9  3007               	movlw	7
   930     07EA  0670               	xorwf	disp7seg@n,w
   931     07EB  0471               	iorwf	disp7seg@n+1,w
   932     07EC  1903               	btfsc	3,2
   933     07ED  2FEF               	goto	u701
   934     07EE  2FF0               	goto	u700
   935     07EF                     u701:
   936     07EF  2FF2               	goto	l858
   937     07F0                     u700:
   938     07F0                     l856:
   939     07F0  01F7               	clrf	_disp7seg$55
   940     07F1  0AF7               	incf	_disp7seg$55,f
   941     07F2                     l858:
   942     07F2  0C77               	rrf	_disp7seg$55,w
   943     07F3  1C03               	skipc
   944     07F4  130F               	bcf	15,6	;volatile
   945     07F5  1803               	skipnc
   946     07F6  170F               	bsf	15,6	;volatile
   947     07F7                     l57:
   948     07F7  0008               	return
   949     07F8                     __end_of_disp7seg:
   950                           
   951                           	psect	text3
   952     0675                     __ptext3:	
   953 ;; *************** function ___awmod *****************
   954 ;; Defined at:
   955 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  divisor         2    0[COMMON] int 
   958 ;;  dividend        2    2[COMMON] int 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  sign            1    6[COMMON] unsigned char 
   961 ;;  counter         1    5[COMMON] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  2    0[COMMON] int 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   974 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   975 ;;Total ram usage:        7 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_multiplex
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984     0675                     ___awmod:	
   985                           ;psect for function ___awmod
   986                           
   987     0675                     l904:	
   988                           ;incstack = 0
   989                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   990                           
   991     0675  01F6               	clrf	___awmod@sign
   992     0676                     l906:
   993     0676  1FF3               	btfss	___awmod@dividend+1,7
   994     0677  2E79               	goto	u811
   995     0678  2E7A               	goto	u810
   996     0679                     u811:
   997     0679  2E81               	goto	l912
   998     067A                     u810:
   999     067A                     l908:
  1000     067A  09F2               	comf	___awmod@dividend,f
  1001     067B  09F3               	comf	___awmod@dividend+1,f
  1002     067C  0AF2               	incf	___awmod@dividend,f
  1003     067D  1903               	skipnz
  1004     067E  0AF3               	incf	___awmod@dividend+1,f
  1005     067F                     l910:
  1006     067F  01F6               	clrf	___awmod@sign
  1007     0680  0AF6               	incf	___awmod@sign,f
  1008     0681                     l912:
  1009     0681  1FF1               	btfss	___awmod@divisor+1,7
  1010     0682  2E84               	goto	u821
  1011     0683  2E85               	goto	u820
  1012     0684                     u821:
  1013     0684  2E8A               	goto	l916
  1014     0685                     u820:
  1015     0685                     l914:
  1016     0685  09F0               	comf	___awmod@divisor,f
  1017     0686  09F1               	comf	___awmod@divisor+1,f
  1018     0687  0AF0               	incf	___awmod@divisor,f
  1019     0688  1903               	skipnz
  1020     0689  0AF1               	incf	___awmod@divisor+1,f
  1021     068A                     l916:
  1022     068A  0870               	movf	___awmod@divisor,w
  1023     068B  0471               	iorwf	___awmod@divisor+1,w
  1024     068C  1903               	btfsc	3,2
  1025     068D  2E8F               	goto	u831
  1026     068E  2E90               	goto	u830
  1027     068F                     u831:
  1028     068F  2EB9               	goto	l934
  1029     0690                     u830:
  1030     0690                     l918:
  1031     0690  01F5               	clrf	___awmod@counter
  1032     0691  0AF5               	incf	___awmod@counter,f
  1033     0692  2E9C               	goto	l924
  1034     0693                     l920:
  1035     0693  3001               	movlw	1
  1036     0694                     u845:
  1037     0694  35F0               	lslf	___awmod@divisor,f
  1038     0695  0DF1               	rlf	___awmod@divisor+1,f
  1039     0696  0B89               	decfsz	9,f
  1040     0697  2E94               	goto	u845
  1041     0698                     l922:
  1042     0698  3001               	movlw	1
  1043     0699  00F4               	movwf	??___awmod
  1044     069A  0874               	movf	??___awmod,w
  1045     069B  07F5               	addwf	___awmod@counter,f
  1046     069C                     l924:
  1047     069C  1FF1               	btfss	___awmod@divisor+1,7
  1048     069D  2E9F               	goto	u851
  1049     069E  2EA0               	goto	u850
  1050     069F                     u851:
  1051     069F  2E93               	goto	l920
  1052     06A0                     u850:
  1053     06A0                     l926:
  1054     06A0  0871               	movf	___awmod@divisor+1,w
  1055     06A1  0273               	subwf	___awmod@dividend+1,w
  1056     06A2  1D03               	skipz
  1057     06A3  2EA6               	goto	u865
  1058     06A4  0870               	movf	___awmod@divisor,w
  1059     06A5  0272               	subwf	___awmod@dividend,w
  1060     06A6                     u865:
  1061     06A6  1C03               	skipc
  1062     06A7  2EA9               	goto	u861
  1063     06A8  2EAA               	goto	u860
  1064     06A9                     u861:
  1065     06A9  2EAE               	goto	l930
  1066     06AA                     u860:
  1067     06AA                     l928:
  1068     06AA  0870               	movf	___awmod@divisor,w
  1069     06AB  02F2               	subwf	___awmod@dividend,f
  1070     06AC  0871               	movf	___awmod@divisor+1,w
  1071     06AD  3BF3               	subwfb	___awmod@dividend+1,f
  1072     06AE                     l930:
  1073     06AE  3001               	movlw	1
  1074     06AF                     u875:
  1075     06AF  36F1               	lsrf	___awmod@divisor+1,f
  1076     06B0  0CF0               	rrf	___awmod@divisor,f
  1077     06B1  0B89               	decfsz	9,f
  1078     06B2  2EAF               	goto	u875
  1079     06B3                     l932:
  1080     06B3  3001               	movlw	1
  1081     06B4  02F5               	subwf	___awmod@counter,f
  1082     06B5  1D03               	btfss	3,2
  1083     06B6  2EB8               	goto	u881
  1084     06B7  2EB9               	goto	u880
  1085     06B8                     u881:
  1086     06B8  2EA0               	goto	l926
  1087     06B9                     u880:
  1088     06B9                     l934:
  1089     06B9  0876               	movf	___awmod@sign,w
  1090     06BA  1903               	btfsc	3,2
  1091     06BB  2EBD               	goto	u891
  1092     06BC  2EBE               	goto	u890
  1093     06BD                     u891:
  1094     06BD  2EC3               	goto	l938
  1095     06BE                     u890:
  1096     06BE                     l936:
  1097     06BE  09F2               	comf	___awmod@dividend,f
  1098     06BF  09F3               	comf	___awmod@dividend+1,f
  1099     06C0  0AF2               	incf	___awmod@dividend,f
  1100     06C1  1903               	skipnz
  1101     06C2  0AF3               	incf	___awmod@dividend+1,f
  1102     06C3                     l938:
  1103     06C3  0873               	movf	___awmod@dividend+1,w
  1104     06C4  00F1               	movwf	?___awmod+1
  1105     06C5  0872               	movf	___awmod@dividend,w
  1106     06C6  00F0               	movwf	?___awmod
  1107     06C7                     l304:
  1108     06C7  0008               	return
  1109     06C8                     __end_of___awmod:
  1110                           
  1111                           	psect	text4
  1112     06C8                     __ptext4:	
  1113 ;; *************** function ___awdiv *****************
  1114 ;; Defined at:
  1115 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  divisor         2    0[COMMON] int 
  1118 ;;  dividend        2    2[COMMON] int 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  quotient        2    7[COMMON] int 
  1121 ;;  sign            1    6[COMMON] unsigned char 
  1122 ;;  counter         1    5[COMMON] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  2    0[COMMON] int 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1132 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1133 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1135 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1136 ;;Total ram usage:        9 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_multiplex
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145     06C8                     ___awdiv:	
  1146                           ;psect for function ___awdiv
  1147                           
  1148     06C8                     l860:	
  1149                           ;incstack = 0
  1150                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1151                           
  1152     06C8  01F6               	clrf	___awdiv@sign
  1153     06C9                     l862:
  1154     06C9  1FF1               	btfss	___awdiv@divisor+1,7
  1155     06CA  2ECC               	goto	u711
  1156     06CB  2ECD               	goto	u710
  1157     06CC                     u711:
  1158     06CC  2ED4               	goto	l868
  1159     06CD                     u710:
  1160     06CD                     l864:
  1161     06CD  09F0               	comf	___awdiv@divisor,f
  1162     06CE  09F1               	comf	___awdiv@divisor+1,f
  1163     06CF  0AF0               	incf	___awdiv@divisor,f
  1164     06D0  1903               	skipnz
  1165     06D1  0AF1               	incf	___awdiv@divisor+1,f
  1166     06D2                     l866:
  1167     06D2  01F6               	clrf	___awdiv@sign
  1168     06D3  0AF6               	incf	___awdiv@sign,f
  1169     06D4                     l868:
  1170     06D4  1FF3               	btfss	___awdiv@dividend+1,7
  1171     06D5  2ED7               	goto	u721
  1172     06D6  2ED8               	goto	u720
  1173     06D7                     u721:
  1174     06D7  2EE1               	goto	l874
  1175     06D8                     u720:
  1176     06D8                     l870:
  1177     06D8  09F2               	comf	___awdiv@dividend,f
  1178     06D9  09F3               	comf	___awdiv@dividend+1,f
  1179     06DA  0AF2               	incf	___awdiv@dividend,f
  1180     06DB  1903               	skipnz
  1181     06DC  0AF3               	incf	___awdiv@dividend+1,f
  1182     06DD                     l872:
  1183     06DD  3001               	movlw	1
  1184     06DE  00F4               	movwf	??___awdiv
  1185     06DF  0874               	movf	??___awdiv,w
  1186     06E0  06F6               	xorwf	___awdiv@sign,f
  1187     06E1                     l874:
  1188     06E1  01F7               	clrf	___awdiv@quotient
  1189     06E2  01F8               	clrf	___awdiv@quotient+1
  1190     06E3                     l876:
  1191     06E3  0870               	movf	___awdiv@divisor,w
  1192     06E4  0471               	iorwf	___awdiv@divisor+1,w
  1193     06E5  1903               	btfsc	3,2
  1194     06E6  2EE8               	goto	u731
  1195     06E7  2EE9               	goto	u730
  1196     06E8                     u731:
  1197     06E8  2F18               	goto	l896
  1198     06E9                     u730:
  1199     06E9                     l878:
  1200     06E9  01F5               	clrf	___awdiv@counter
  1201     06EA  0AF5               	incf	___awdiv@counter,f
  1202     06EB  2EF5               	goto	l884
  1203     06EC                     l880:
  1204     06EC  3001               	movlw	1
  1205     06ED                     u745:
  1206     06ED  35F0               	lslf	___awdiv@divisor,f
  1207     06EE  0DF1               	rlf	___awdiv@divisor+1,f
  1208     06EF  0B89               	decfsz	9,f
  1209     06F0  2EED               	goto	u745
  1210     06F1                     l882:
  1211     06F1  3001               	movlw	1
  1212     06F2  00F4               	movwf	??___awdiv
  1213     06F3  0874               	movf	??___awdiv,w
  1214     06F4  07F5               	addwf	___awdiv@counter,f
  1215     06F5                     l884:
  1216     06F5  1FF1               	btfss	___awdiv@divisor+1,7
  1217     06F6  2EF8               	goto	u751
  1218     06F7  2EF9               	goto	u750
  1219     06F8                     u751:
  1220     06F8  2EEC               	goto	l880
  1221     06F9                     u750:
  1222     06F9                     l886:
  1223     06F9  3001               	movlw	1
  1224     06FA                     u765:
  1225     06FA  35F7               	lslf	___awdiv@quotient,f
  1226     06FB  0DF8               	rlf	___awdiv@quotient+1,f
  1227     06FC  0B89               	decfsz	9,f
  1228     06FD  2EFA               	goto	u765
  1229     06FE  0871               	movf	___awdiv@divisor+1,w
  1230     06FF  0273               	subwf	___awdiv@dividend+1,w
  1231     0700  1D03               	skipz
  1232     0701  2F04               	goto	u775
  1233     0702  0870               	movf	___awdiv@divisor,w
  1234     0703  0272               	subwf	___awdiv@dividend,w
  1235     0704                     u775:
  1236     0704  1C03               	skipc
  1237     0705  2F07               	goto	u771
  1238     0706  2F08               	goto	u770
  1239     0707                     u771:
  1240     0707  2F0D               	goto	l892
  1241     0708                     u770:
  1242     0708                     l888:
  1243     0708  0870               	movf	___awdiv@divisor,w
  1244     0709  02F2               	subwf	___awdiv@dividend,f
  1245     070A  0871               	movf	___awdiv@divisor+1,w
  1246     070B  3BF3               	subwfb	___awdiv@dividend+1,f
  1247     070C                     l890:
  1248     070C  1477               	bsf	___awdiv@quotient,0
  1249     070D                     l892:
  1250     070D  3001               	movlw	1
  1251     070E                     u785:
  1252     070E  36F1               	lsrf	___awdiv@divisor+1,f
  1253     070F  0CF0               	rrf	___awdiv@divisor,f
  1254     0710  0B89               	decfsz	9,f
  1255     0711  2F0E               	goto	u785
  1256     0712                     l894:
  1257     0712  3001               	movlw	1
  1258     0713  02F5               	subwf	___awdiv@counter,f
  1259     0714  1D03               	btfss	3,2
  1260     0715  2F17               	goto	u791
  1261     0716  2F18               	goto	u790
  1262     0717                     u791:
  1263     0717  2EF9               	goto	l886
  1264     0718                     u790:
  1265     0718                     l896:
  1266     0718  0876               	movf	___awdiv@sign,w
  1267     0719  1903               	btfsc	3,2
  1268     071A  2F1C               	goto	u801
  1269     071B  2F1D               	goto	u800
  1270     071C                     u801:
  1271     071C  2F22               	goto	l900
  1272     071D                     u800:
  1273     071D                     l898:
  1274     071D  09F7               	comf	___awdiv@quotient,f
  1275     071E  09F8               	comf	___awdiv@quotient+1,f
  1276     071F  0AF7               	incf	___awdiv@quotient,f
  1277     0720  1903               	skipnz
  1278     0721  0AF8               	incf	___awdiv@quotient+1,f
  1279     0722                     l900:
  1280     0722  0878               	movf	___awdiv@quotient+1,w
  1281     0723  00F1               	movwf	?___awdiv+1
  1282     0724  0877               	movf	___awdiv@quotient,w
  1283     0725  00F0               	movwf	?___awdiv
  1284     0726                     l291:
  1285     0726  0008               	return
  1286     0727                     __end_of___awdiv:
  1287     007E                     btemp	set	126	;btemp
  1288     007E                     wtemp0	set	126
  1289                           
  1290                           	psect	config
  1291                           
  1292                           ;Config register CONFIG1 @ 0x8007
  1293                           ;	Oscillator Selection
  1294                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1295                           ;	Watchdog Timer Enable
  1296                           ;	WDTE = OFF, WDT disabled
  1297                           ;	Power-up Timer Enable
  1298                           ;	PWRTE = ON, PWRT enabled
  1299                           ;	MCLR Pin Function Select
  1300                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1301                           ;	Flash Program Memory Code Protection
  1302                           ;	CP = OFF, Program memory code protection is disabled
  1303                           ;	Brown-out Reset Enable
  1304                           ;	BOREN = OFF, Brown-out Reset disabled
  1305                           ;	Clock Out Enable
  1306                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1307                           ;	Internal/External Switchover
  1308                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1309                           ;	Fail-Safe Clock Monitor Enable
  1310                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1311     8007                     	org	32775
  1312     8007  39C4               	dw	14788
  1313                           
  1314                           ;Config register CONFIG2 @ 0x8008
  1315                           ;	Flash Memory Self-Write Protection
  1316                           ;	WRT = OFF, Write protection off
  1317                           ;	Voltage Regulator Capacitor Enable bit
  1318                           ;	VCAPEN = OFF, VCAP pin function disabled
  1319                           ;	Stack Overflow/Underflow Reset Enable
  1320                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1321                           ;	Brown-out Reset Voltage Selection
  1322                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1323                           ;	Low-Power Brown Out Reset
  1324                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1325                           ;	Low-Voltage Programming Enable
  1326                           ;	LVP = ON, Low-voltage programming enabled
  1327     8008                     	org	32776
  1328     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       8
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_multiplex
    _multiplex->___awdiv

Critical Paths under _main in BANK0

    _main->_multiplex

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1868
                                             12 COMMON     2     2      0
                          _multiplex
 ---------------------------------------------------------------------------------
 (1) _multiplex                                            7     5      2    1868
                                              9 COMMON     3     1      2
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                           _disp7seg
 ---------------------------------------------------------------------------------
 (2) _disp7seg                                             8     6      2     802
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _multiplex
     ___awdiv
     ___awmod
     _disp7seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       8       5       10.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      16      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      16      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 07 13:14:01 2024

                      _i 0020                       l60 0674                       l57 07F7  
           ___awdiv@sign 0076                      l304 06C7                      l291 0726  
                    l800 0744                      l810 0766                      l802 074C  
                    l900 0722                      l812 076C                      l820 0783  
                    l804 0753                      l910 067F                      l830 07A4  
                    l822 0788                      l814 0773                      l806 0755  
                    l920 0693                      l912 0681                      l904 0675  
                    l840 07C0                      l832 07AB                      l824 078F  
                    l816 077A                      l808 075A                      l930 06AE  
                    l922 0698                      l914 0685                      l906 0676  
                    l850 07DC                      l842 07C7                      l834 07B2  
                    l826 0796                      l818 0781                      l860 06C8  
                    l932 06B3                      l924 069C                      l916 068A  
                    l908 067A                      l852 07E3                      l844 07CE  
                    l828 079D                      l836 07B4                      l870 06D8  
                    l862 06C9                      l926 06A0                      l918 0690  
                    l934 06B9                      l854 07E9                      l846 07D5  
                    l838 07B9                      l790 0728                      l950 0662  
                    l942 0630                      l880 06EC                      l872 06DD  
                    l864 06CD                      l936 06BE                      l928 06AA  
                    l856 07F0                      l848 07D7                      l792 072E  
                    l952 0669                      l944 0657                      l960 05F0  
                    l890 070C                      l882 06F1                      l874 06E1  
                    l866 06D2                      l938 06C3                      l858 07F2  
                    l794 0735                      l954 0672                      l946 0659  
                    l970 060C                      l962 05F7                      l892 070D  
                    l884 06F5                      l876 06E3                      l868 06D4  
                    l796 073C                      l788 0727                      l948 0660  
                    l972 0610                      l964 05FA                      l956 05EC  
                    l894 0712                      l886 06F9                      l878 06E9  
                    l798 073E                      l974 0617                      l966 0601  
                    l958 05EF                      l888 0708                      l896 0718  
                    l976 0619                      l968 0606                      l898 071D  
                    l978 0621                      _RB0 0068                      _RD0 0078  
                    _RD1 0079                      _RD2 007A                      _RE0 0080  
                    _RD3 007B                      _RE1 0081                      _RD4 007C  
                    _RD5 007D                      _RD6 007E                      u500 074C  
                    u501 074B                      u510 0753                      u511 0752  
                    u600 079D                      u520 0763                      u601 079C  
                    u521 0760                      u610 07A4                      u611 07A3  
                    u700 07F0                      u620 07AB                      u540 076C  
                    u701 07EF                      u621 07AA                      u541 076B  
                    u710 06CD                      u630 07B2                      u550 0773  
                    u534 0765                      u470 072E                      u711 06CC  
                    u631 07B1                      u551 0772                      u471 072D  
                    u800 071D                      u720 06D8                      u640 07C0  
                    u560 077A                      u480 0735                      u801 071C  
                    u721 06D7                      u641 07BF                      u561 0779  
                    u481 0734                      u730 06E9                      u810 067A  
                    u650 07C7                      u570 0781                      u490 073C  
                    u731 06E8                      u811 0679                      u651 07C6  
                    u571 0780                      u491 073B                      u820 0685  
                    u660 07CE                      u580 078F                      u900 0606  
                    u821 0684                      u661 07CD                      u581 078E  
                    u901 0605                      u750 06F9                      u830 0690  
                    u670 07D5                      u590 0796                      u910 060C  
                    u751 06F8                      u831 068F                      u671 07D4  
                    u591 0795                      u911 060B                      u680 07E3  
                    u920 0617                      u745 06ED                      u681 07E2  
                    u921 0616                      u770 0708                      u850 06A0  
                    u690 07E9                      u771 0707                      u851 069F  
                    u691 07E8                      u860 06AA                      u765 06FA  
                    u861 06A9                      u845 0694                      u790 0718  
                    u791 0717                      u775 0704                      u880 06B9  
                    u785 070E                      u881 06B8                      u865 06A6  
                    u937 061C                      u890 06BE                      u891 06BD  
                    u875 06AF                      u947 065C                      u957 066E  
           ___awmod@sign 0076                      wreg 0009                     _main 05EC  
                   btemp 007E                     start 0002                    ?_main 0070  
        __end_of___awdiv 0727          __end_of___awmod 06C8          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _PORTD 000F                    _TRISB 008D  
                  _TRISD 008F                    _TRISE 0090                    status 0003  
                  wtemp0 007E          __initialization 07F8             __end_of_main 0630  
                 ??_main 007C         ___awdiv@dividend 0072                   _ANSELB 018D  
                 _ANSELD 018F                   _ANSELE 0190                   _OSCCON 0099  
                 _BT_ant 0022         __end_of_disp7seg 07F8                ??___awdiv 0074  
              ??___awmod 0074         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pbssBANK0 0020               __pmaintext 05EC                ?_disp7seg 0070  
                ___awdiv 06C8                  ___awmod 0675                  __ptext1 0630  
                __ptext2 0727                  __ptext3 0675                  __ptext4 06C8  
       ___awmod@dividend 0072          multiplex@decena 0024               ??_disp7seg 0072  
        multiplex@unidad 0026     end_of_initialization 07FD        __end_of_multiplex 0675  
    start_initialization 07F8                ___latbits 0003            __pcstackBANK0 0024  
               ?___awdiv 0070                 ?___awmod 0070              _disp7seg$50 0072  
            _disp7seg$51 0073              _disp7seg$52 0074              _disp7seg$53 0075  
            _disp7seg$54 0076              _disp7seg$55 0077                disp7seg@n 0070  
              _multiplex 0630               multiplex@n 0079               ?_multiplex 0079  
               _disp7seg 0727              ??_multiplex 007B  
